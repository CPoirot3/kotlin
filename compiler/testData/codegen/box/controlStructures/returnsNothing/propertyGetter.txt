MODULE <test-module>
  FILE /propertyGetter.kt
    PROPERTY public var flag: kotlin.Boolean
      EXPRESSION_BODY
        CONST Boolean type=kotlin.Boolean value='true'
    CLASS OBJECT Test
      CONSTRUCTOR private constructor Test()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='Test'
      PROPERTY public final val magic: kotlin.Nothing
        PROPERTY_GETTER public final fun <get-magic>(): kotlin.Nothing
          BLOCK_BODY
            BLOCK type=kotlin.Nothing operator=EXCLEXCL
              VAR val tmp0_notnull: kotlin.Nothing?
                CONST Null type=kotlin.Nothing? value='null'
              WHEN type=kotlin.Nothing operator=null
                if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR 'tmp0_notnull: Nothing?' type=kotlin.Nothing? operator=null
                  arg1: CONST Null type=kotlin.Nothing? value='null'
                then: CALL 'THROW_NPE(): Nothing' type=kotlin.Nothing operator=EXCLEXCL
                else: GET_VAR 'tmp0_notnull: Nothing?' type=kotlin.Nothing? operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val a: kotlin.String
        WHEN type=kotlin.Unit operator=IF
          if: CALL '<get-flag>(): Boolean' type=kotlin.Boolean operator=GET_PROPERTY
          then: BLOCK type=kotlin.Unit operator=null
            SET_VAR 'a: String' type=kotlin.Unit operator=EQ
              CONST String type=kotlin.String value='OK'
          else: BLOCK type=kotlin.Nothing operator=null
            CALL '<get-magic>(): Nothing' type=kotlin.Nothing operator=GET_PROPERTY
              $this: GET_OBJECT 'Test' type=Test
        RETURN type=kotlin.Nothing from='box(): String'
          GET_VAR 'a: String' type=kotlin.String operator=null
