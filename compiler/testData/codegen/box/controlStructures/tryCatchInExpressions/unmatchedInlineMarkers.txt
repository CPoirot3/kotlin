MODULE <test-module>
  FILE /unmatchedInlineMarkers.kt
    FUN public inline fun catchAll(x: kotlin.String, block: () -> kotlin.Unit): kotlin.String
      BLOCK_BODY
        TRY_CATCH type=kotlin.Unit
          try: BLOCK type=kotlin.Unit operator=null
            CALL 'invoke(): Unit' type=kotlin.Unit operator=INVOKE
              $this: GET_VAR 'value-parameter block: () -> Unit' type=() -> kotlin.Unit operator=VARIABLE_AS_FUNCTION
          catch e: BLOCK type=kotlin.Unit operator=null
        RETURN type=kotlin.Nothing from='catchAll(String, () -> Unit): String'
          GET_VAR 'value-parameter x: String' type=kotlin.String operator=null
    FUN public inline fun throwIt(msg: kotlin.String): kotlin.Unit
      BLOCK_BODY
        THROW type=kotlin.Nothing
          CALL 'constructor Exception(String!)' type=java.lang.Exception operator=null
            p0: GET_VAR 'value-parameter msg: String' type=kotlin.String operator=null
    FUN public inline fun bar(x: kotlin.String): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='bar(String): String'
          CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
            $this: GET_VAR 'value-parameter x: String' type=kotlin.String operator=null
            other: CALL 'catchAll(String, () -> Unit): String' type=kotlin.String operator=null
              x: CONST String type=kotlin.String value=''
              block: BLOCK type=() -> kotlin.Unit operator=LAMBDA
                FUN local final fun <anonymous>(): kotlin.Unit
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from='<anonymous>(): Unit'
                      CALL 'throwIt(String): Unit' type=kotlin.Unit operator=null
                        msg: CONST String type=kotlin.String value='oops!'
                CALLABLE_REFERENCE '<anonymous>(): Unit' type=() -> kotlin.Unit operator=LAMBDA
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='box(): String'
          CALL 'bar(String): String' type=kotlin.String operator=null
            x: CONST String type=kotlin.String value='OK'
