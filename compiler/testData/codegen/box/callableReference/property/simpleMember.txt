MODULE <test-module>
  FILE /simpleMember.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(x: kotlin.Int)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          SET_BACKING_FIELD 'x: Int' type=kotlin.Unit operator=null
            receiver: THIS of 'A' type=A
            value: GET_VAR 'value-parameter x: Int' type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor='A'
      PROPERTY public final val x: kotlin.Int
        EXPRESSION_BODY
          GET_VAR 'value-parameter x: Int' type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val p: kotlin.reflect.KProperty1<A, kotlin.Int>
          CALLABLE_REFERENCE 'x: Int' type=kotlin.reflect.KProperty1<A, kotlin.Int> operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'get(A): Int' type=kotlin.Int operator=null
                $this: GET_VAR 'p: KProperty1<A, Int>' type=kotlin.reflect.KProperty1<A, kotlin.Int> operator=null
                receiver: CALL 'constructor A(Int)' type=A operator=null
                  x: CONST Int type=kotlin.Int value='42'
              arg1: CONST Int type=kotlin.Int value='42'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='Fail 1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'get(A): Int' type=kotlin.Int operator=null
                $this: GET_VAR 'p: KProperty1<A, Int>' type=kotlin.reflect.KProperty1<A, kotlin.Int> operator=null
                receiver: CALL 'constructor A(Int)' type=A operator=null
                  x: CONST Int type=kotlin.Int value='-1'
              arg1: CONST Int type=kotlin.Int value='-1'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='Fail 2'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL '<get-name>(): String' type=kotlin.String operator=GET_PROPERTY
                $this: GET_VAR 'p: KProperty1<A, Int>' type=kotlin.reflect.KProperty1<A, kotlin.Int> operator=null
              arg1: CONST String type=kotlin.String value='x'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='Fail 3'
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
