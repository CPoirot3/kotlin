MODULE <test-module>
  FILE /kt12738.kt
    FUN public fun <T> get(t: T): () -> kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='get(T): () -> String'
          CALLABLE_REFERENCE 'toString() on Any?: String' type=kotlin.reflect.KFunction0<kotlin.String> operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'invoke(): String' type=kotlin.String operator=null
                $this: CALL 'get(Nothing?): () -> String' type=() -> kotlin.String operator=null
                  t: CONST Null type=kotlin.Nothing? value='null'
              arg1: CONST String type=kotlin.String value='null'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='Fail null'
        RETURN type=kotlin.Nothing from='box(): String'
          CALL 'invoke(): String' type=kotlin.String operator=null
            $this: CALL 'get(String): () -> String' type=() -> kotlin.String operator=null
              t: CONST String type=kotlin.String value='OK'
