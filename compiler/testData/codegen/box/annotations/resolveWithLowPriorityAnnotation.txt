MODULE <test-module>
  FILE /resolveWithLowPriorityAnnotation.kt
    FUN @kotlin.Suppress @kotlin.internal.LowPriorityInOverloadResolution public fun foo(i: kotlin.Int): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo(Int): Int'
          CONST Int type=kotlin.Int value='1'
    FUN public fun foo(a: kotlin.Any): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo(Any): Int'
          CONST Int type=kotlin.Int value='2'
    FUN @kotlin.Suppress @kotlin.internal.LowPriorityInOverloadResolution public fun bar(a: kotlin.String?): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='bar(String?): Int'
          CONST Int type=kotlin.Int value='3'
    FUN public fun bar(a: kotlin.Any): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='bar(Any): Int'
          CONST Int type=kotlin.Int value='4'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'foo(Any): Int' type=kotlin.Int operator=null
                a: CONST Int type=kotlin.Int value='1'
              arg1: CONST Int type=kotlin.Int value='2'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='fail1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'bar(String?): Int' type=kotlin.Int operator=null
                a: CONST Null type=kotlin.Nothing? value='null'
              arg1: CONST Int type=kotlin.Int value='3'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='fail2'
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
