MODULE <test-module>
  FILE /nestedClassPropertyAsParameter.kt
    CLASS CLASS MyClass
      CONSTRUCTOR public constructor MyClass()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='MyClass'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val ann: Ann!
          CALL 'getAnnotation(Class<Ann!>!): Ann!' type=Ann! operator=null
            $this: CALL '<get-java>() on KClass<MyClass>: Class<MyClass>' type=java.lang.Class<MyClass> operator=GET_PROPERTY
              $receiver: CLASS_REFERENCE 'MyClass' type=kotlin.reflect.KClass<MyClass>
            p0: CALL '<get-java>() on KClass<Ann>: Class<Ann>' type=java.lang.Class<Ann> operator=GET_PROPERTY
              $receiver: CLASS_REFERENCE 'Ann' type=kotlin.reflect.KClass<Ann>
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
            arg0: GET_VAR 'ann: Ann!' type=Ann! operator=null
            arg1: CONST Null type=kotlin.Nothing? value='null'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='fail: cannot find Ann on MyClass}'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL '<get-i>(): Int' type=kotlin.Int operator=GET_PROPERTY
                $this: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=Ann
                  GET_VAR 'ann: Ann!' type=Ann! operator=null
              arg1: CONST Int type=kotlin.Int value='1'
          then: RETURN type=kotlin.Nothing from='box(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail: annotation parameter i should be 1, but was '
              CALL '<get-i>(): Int' type=kotlin.Int operator=GET_PROPERTY
                $this: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=Ann
                  GET_VAR 'ann: Ann!' type=Ann! operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
    CLASS ANNOTATION_CLASS Ann
      PROPERTY public final val i: kotlin.Int
        EXPRESSION_BODY
          GET_VAR 'value-parameter i: Int' type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='A'
      CLASS CLASS B
        CONSTRUCTOR public constructor B()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
            INSTANCE_INITIALIZER_CALL classDescriptor='B'
        CLASS OBJECT companion object of B
          CONSTRUCTOR private constructor Companion()
            BLOCK_BODY
              DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
              INSTANCE_INITIALIZER_CALL classDescriptor='companion object of B'
          PROPERTY public const final val i: kotlin.Int = 1
            EXPRESSION_BODY
              CONST Int type=kotlin.Int value='1'
