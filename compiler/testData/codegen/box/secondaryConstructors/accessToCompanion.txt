MODULE <test-module>
  FILE /accessToCompanion.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(result: kotlin.Int)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          SET_BACKING_FIELD 'result: Int' type=kotlin.Unit operator=null
            receiver: THIS of 'A' type=A
            value: GET_VAR 'value-parameter result: Int' type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor='A'
      PROPERTY public final val result: kotlin.Int
        EXPRESSION_BODY
          GET_VAR 'value-parameter result: Int' type=kotlin.Int operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      CLASS OBJECT companion object of A
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
            INSTANCE_INITIALIZER_CALL classDescriptor='companion object of A'
        FUN public final fun foo(): kotlin.Int
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='foo(): Int'
              CONST Int type=kotlin.Int value='1'
        PROPERTY public final val prop: kotlin.Int = 2
          EXPRESSION_BODY
            CONST Int type=kotlin.Int value='2'
        PROPERTY public final val C: kotlin.Int = 3
          EXPRESSION_BODY
            CONST Int type=kotlin.Int value='3'
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor A(Int)'
            result: CALL 'plus(Int): Int' type=kotlin.Int operator=PLUS
              $this: CALL 'plus(Int): Int' type=kotlin.Int operator=PLUS
                $this: CALL 'foo(): Int' type=kotlin.Int operator=null
                  $this: THIS of 'companion object of A' type=A.Companion
                other: CALL '<get-prop>(): Int' type=kotlin.Int operator=GET_PROPERTY
                  $this: THIS of 'companion object of A' type=A.Companion
              other: CALL '<get-C>(): Int' type=kotlin.Int operator=GET_PROPERTY
                $this: THIS of 'companion object of A' type=A.Companion
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val result: kotlin.Int
          CALL '<get-result>(): Int' type=kotlin.Int operator=GET_PROPERTY
            $this: CALL 'constructor A()' type=A operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'result: Int' type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='6'
          then: RETURN type=kotlin.Nothing from='box(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail: '
              GET_VAR 'result: Int' type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
