MODULE <test-module>
  FILE /localClasses.kt
    CLASS CLASS C
      CONSTRUCTOR public constructor C(grandParentProp: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          SET_BACKING_FIELD 'grandParentProp: String' type=kotlin.Unit operator=null
            receiver: THIS of 'C' type=C
            value: GET_VAR 'value-parameter grandParentProp: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor='C'
      PROPERTY public final val grandParentProp: kotlin.String
        EXPRESSION_BODY
          GET_VAR 'value-parameter grandParentProp: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR var sideEffects: kotlin.String
          CONST String type=kotlin.String value=''
        VAR var parentSideEffects: kotlin.String
          CONST String type=kotlin.String value=''
        VAR val justForUsageInClosure: kotlin.Int = 7
          CONST Int type=kotlin.Int value='7'
        VAR val justForUsageInParentClosure: kotlin.String = "parentCaptured"
          CONST String type=kotlin.String value='parentCaptured'
        CLASS CLASS B
          PROPERTY public final val parentProp: kotlin.String
          ANONYMOUS_INITIALIZER B
            BLOCK_BODY
              SET_VAR 'sideEffects: String' type=kotlin.Unit operator=PLUSEQ
                CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                  $this: GET_VAR 'sideEffects: String' type=kotlin.String operator=PLUSEQ
                  other: CONST String type=kotlin.String value='minus-one#'
              SET_VAR 'parentSideEffects: String' type=kotlin.Unit operator=PLUSEQ
                CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                  $this: GET_VAR 'parentSideEffects: String' type=kotlin.String operator=PLUSEQ
                  other: CONST String type=kotlin.String value='1'
          CONSTRUCTOR protected constructor B(arg: kotlin.Int)
            BLOCK_BODY
              DELEGATING_CONSTRUCTOR_CALL 'constructor C(String)'
                grandParentProp: GET_VAR 'justForUsageInParentClosure: String' type=kotlin.String operator=null
              INSTANCE_INITIALIZER_CALL classDescriptor='B'
              SET_BACKING_FIELD 'parentProp: String' type=kotlin.Unit operator=null
                receiver: THIS of 'B' type=box.B
                value: CALL 'toString(): String' type=kotlin.String operator=null
                  $this: GET_VAR 'value-parameter arg: Int' type=kotlin.Int operator=null
              SET_VAR 'sideEffects: String' type=kotlin.Unit operator=PLUSEQ
                CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                  $this: GET_VAR 'sideEffects: String' type=kotlin.String operator=PLUSEQ
                  other: CONST String type=kotlin.String value='0.5#'
              SET_VAR 'parentSideEffects: String' type=kotlin.Unit operator=PLUSEQ
                CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                  $this: GET_VAR 'parentSideEffects: String' type=kotlin.String operator=PLUSEQ
                  other: CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
                    $this: CONST String type=kotlin.String value='#'
                    other: GET_VAR 'justForUsageInParentClosure: String' type=kotlin.String operator=null
          CONSTRUCTOR protected constructor B(arg1: kotlin.Int, arg2: kotlin.Int)
            BLOCK_BODY
              DELEGATING_CONSTRUCTOR_CALL 'constructor C(String)'
                grandParentProp: GET_VAR 'justForUsageInParentClosure: String' type=kotlin.String operator=null
              INSTANCE_INITIALIZER_CALL classDescriptor='B'
              SET_BACKING_FIELD 'parentProp: String' type=kotlin.Unit operator=null
                receiver: THIS of 'B' type=box.B
                value: CALL 'toString(): String' type=kotlin.String operator=null
                  $this: CALL 'plus(Int): Int' type=kotlin.Int operator=PLUS
                    $this: GET_VAR 'value-parameter arg1: Int' type=kotlin.Int operator=null
                    other: GET_VAR 'value-parameter arg2: Int' type=kotlin.Int operator=null
              SET_VAR 'sideEffects: String' type=kotlin.Unit operator=PLUSEQ
                CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                  $this: GET_VAR 'sideEffects: String' type=kotlin.String operator=PLUSEQ
                  other: CONST String type=kotlin.String value='0.7#'
              SET_VAR 'parentSideEffects: String' type=kotlin.Unit operator=PLUSEQ
                CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                  $this: GET_VAR 'parentSideEffects: String' type=kotlin.String operator=PLUSEQ
                  other: CONST String type=kotlin.String value='#3'
          ANONYMOUS_INITIALIZER B
            BLOCK_BODY
              SET_VAR 'sideEffects: String' type=kotlin.Unit operator=PLUSEQ
                CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                  $this: GET_VAR 'sideEffects: String' type=kotlin.String operator=PLUSEQ
                  other: CONST String type=kotlin.String value='zero#'
              SET_VAR 'parentSideEffects: String' type=kotlin.Unit operator=PLUSEQ
                CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                  $this: GET_VAR 'parentSideEffects: String' type=kotlin.String operator=PLUSEQ
                  other: CONST String type=kotlin.String value='#4'
        CLASS CLASS A
          PROPERTY public final var prop: kotlin.String
            EXPRESSION_BODY
              CONST String type=kotlin.String value=''
          ANONYMOUS_INITIALIZER A
            BLOCK_BODY
              SET_VAR 'sideEffects: String' type=kotlin.Unit operator=PLUSEQ
                CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                  $this: GET_VAR 'sideEffects: String' type=kotlin.String operator=PLUSEQ
                  other: CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
                    $this: CALL '<get-prop>(): String' type=kotlin.String operator=GET_PROPERTY
                      $this: THIS of 'A' type=box.A
                    other: CONST String type=kotlin.String value='first'
          CONSTRUCTOR public constructor A(x1: kotlin.Int, x2: kotlin.Int)
            BLOCK_BODY
              DELEGATING_CONSTRUCTOR_CALL 'constructor B(Int, Int)'
                arg1: GET_VAR 'value-parameter x1: Int' type=kotlin.Int operator=null
                arg2: GET_VAR 'value-parameter x2: Int' type=kotlin.Int operator=null
              INSTANCE_INITIALIZER_CALL classDescriptor='A'
              CALL '<set-prop>(String): Unit' type=kotlin.Unit operator=EQ
                $this: THIS of 'A' type=box.A
                <set-?>: CALL 'toString(): String' type=kotlin.String operator=null
                  $this: GET_VAR 'value-parameter x1: Int' type=kotlin.Int operator=null
              SET_VAR 'sideEffects: String' type=kotlin.Unit operator=PLUSEQ
                CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                  $this: GET_VAR 'sideEffects: String' type=kotlin.String operator=PLUSEQ
                  other: CONST String type=kotlin.String value='#third'
          ANONYMOUS_INITIALIZER A
            BLOCK_BODY
              SET_VAR 'sideEffects: String' type=kotlin.Unit operator=PLUSEQ
                CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                  $this: GET_VAR 'sideEffects: String' type=kotlin.String operator=PLUSEQ
                  other: CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
                    $this: CALL '<get-prop>(): String' type=kotlin.String operator=GET_PROPERTY
                      $this: THIS of 'A' type=box.A
                    other: CONST String type=kotlin.String value='#second'
          CONSTRUCTOR public constructor A(x: kotlin.Int)
            BLOCK_BODY
              DELEGATING_CONSTRUCTOR_CALL 'constructor B(Int)'
                arg: CALL 'plus(Int): Int' type=kotlin.Int operator=PLUS
                  $this: GET_VAR 'justForUsageInClosure: Int' type=kotlin.Int operator=null
                  other: GET_VAR 'value-parameter x: Int' type=kotlin.Int operator=null
              INSTANCE_INITIALIZER_CALL classDescriptor='A'
              BLOCK type=kotlin.Unit operator=PLUSEQ
                VAR val tmp0_this: box.A
                  THIS of 'A' type=box.A
                CALL '<set-prop>(String): Unit' type=kotlin.Unit operator=PLUSEQ
                  $this: GET_VAR 'tmp0_this: A' type=box.A operator=null
                  <set-?>: CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                    $this: CALL '<get-prop>(): String' type=kotlin.String operator=PLUSEQ
                      $this: GET_VAR 'tmp0_this: A' type=box.A operator=null
                    other: STRING_CONCATENATION type=kotlin.String
                      GET_VAR 'value-parameter x: Int' type=kotlin.Int operator=null
                      CONST String type=kotlin.String value='#int'
              SET_VAR 'sideEffects: String' type=kotlin.Unit operator=PLUSEQ
                CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                  $this: GET_VAR 'sideEffects: String' type=kotlin.String operator=PLUSEQ
                  other: CONST String type=kotlin.String value='#fourth'
          CONSTRUCTOR public constructor A()
            BLOCK_BODY
              DELEGATING_CONSTRUCTOR_CALL 'constructor A(Int)'
                x: GET_VAR 'justForUsageInClosure: Int' type=kotlin.Int operator=null
              SET_VAR 'sideEffects: String' type=kotlin.Unit operator=PLUSEQ
                CALL 'plus(Any?): String' type=kotlin.String operator=PLUSEQ
                  $this: GET_VAR 'sideEffects: String' type=kotlin.String operator=PLUSEQ
                  other: CONST String type=kotlin.String value='#fifth'
          FUN public open override fun toString(): kotlin.String
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='toString(): String'
                STRING_CONCATENATION type=kotlin.String
                  CALL '<get-prop>(): String' type=kotlin.String operator=GET_PROPERTY
                    $this: THIS of 'A' type=box.A
                  CONST String type=kotlin.String value='#'
                  CALL '<get-parentProp>(): String' type=kotlin.String operator=GET_PROPERTY
                    $this: THIS of 'A' type=box.A
                  CONST String type=kotlin.String value='#'
                  CALL '<get-grandParentProp>(): String' type=kotlin.String operator=GET_PROPERTY
                    $this: THIS of 'A' type=box.A
        VAR val a1: kotlin.String
          CALL 'toString(): String' type=kotlin.String operator=null
            $this: CALL 'constructor A(Int, Int)' type=box.A operator=null
              x1: CONST Int type=kotlin.Int value='5'
              x2: CONST Int type=kotlin.Int value='10'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'a1: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='5#15#parentCaptured'
          then: RETURN type=kotlin.Nothing from='box(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail1: '
              GET_VAR 'a1: String' type=kotlin.String operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'sideEffects: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='minus-one#zero#0.7#first#second#third'
          then: RETURN type=kotlin.Nothing from='box(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail2: '
              GET_VAR 'sideEffects: String' type=kotlin.String operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'parentSideEffects: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='1#4#3'
          then: RETURN type=kotlin.Nothing from='box(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail3: '
              GET_VAR 'parentSideEffects: String' type=kotlin.String operator=null
        SET_VAR 'sideEffects: String' type=kotlin.Unit operator=EQ
          CONST String type=kotlin.String value=''
        SET_VAR 'parentSideEffects: String' type=kotlin.Unit operator=EQ
          CONST String type=kotlin.String value=''
        VAR val a2: kotlin.String
          CALL 'toString(): String' type=kotlin.String operator=null
            $this: CALL 'constructor A(Int)' type=box.A operator=null
              x: CONST Int type=kotlin.Int value='123'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'a2: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='123#int#130#parentCaptured'
          then: RETURN type=kotlin.Nothing from='box(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail1: '
              GET_VAR 'a2: String' type=kotlin.String operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'sideEffects: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='minus-one#zero#0.5#first#second#fourth'
          then: RETURN type=kotlin.Nothing from='box(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail4: '
              GET_VAR 'sideEffects: String' type=kotlin.String operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'parentSideEffects: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='1#4#parentCaptured'
          then: RETURN type=kotlin.Nothing from='box(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail5: '
              GET_VAR 'parentSideEffects: String' type=kotlin.String operator=null
        SET_VAR 'sideEffects: String' type=kotlin.Unit operator=EQ
          CONST String type=kotlin.String value=''
        SET_VAR 'parentSideEffects: String' type=kotlin.Unit operator=EQ
          CONST String type=kotlin.String value=''
        VAR val a3: kotlin.String
          CALL 'toString(): String' type=kotlin.String operator=null
            $this: CALL 'constructor A()' type=box.A operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'a3: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='7#int#14#parentCaptured'
          then: RETURN type=kotlin.Nothing from='box(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail6: '
              GET_VAR 'a3: String' type=kotlin.String operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'sideEffects: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='minus-one#zero#0.5#first#second#fourth#fifth'
          then: RETURN type=kotlin.Nothing from='box(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail7: '
              GET_VAR 'sideEffects: String' type=kotlin.String operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'parentSideEffects: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='1#4#parentCaptured'
          then: RETURN type=kotlin.Nothing from='box(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='fail8: '
              GET_VAR 'parentSideEffects: String' type=kotlin.String operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
