MODULE <test-module>
  FILE /nullSmartCast.kt
    FUN public fun kotlin.String?.foo(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo() on String?: String'
          BLOCK type=kotlin.String operator=ELVIS
            VAR val tmp0_elvis_lhs: kotlin.String?
              $RECEIVER of 'foo() on String?: String' type=kotlin.String?
            WHEN type=kotlin.String operator=null
              if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
                arg0: GET_VAR 'tmp0_elvis_lhs: String?' type=kotlin.String? operator=null
                arg1: CONST Null type=kotlin.Nothing? value='null'
              then: CONST String type=kotlin.String value='OK'
              else: GET_VAR 'tmp0_elvis_lhs: String?' type=kotlin.String? operator=null
    FUN public fun foo(i: kotlin.Int?): kotlin.String
      BLOCK_BODY
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
            arg0: GET_VAR 'value-parameter i: Int?' type=kotlin.Int? operator=null
            arg1: CONST Null type=kotlin.Nothing? value='null'
          then: RETURN type=kotlin.Nothing from='foo(Int?): String'
            CALL 'foo() on String?: String' type=kotlin.String operator=null
              $receiver: TYPE_OP operator=IMPLICIT_CAST typeOperand=kotlin.String?
                GET_VAR 'value-parameter i: Int?' type=kotlin.Int? operator=null
        RETURN type=kotlin.Nothing from='foo(Int?): String'
          TYPE_OP operator=IMPLICIT_CAST typeOperand=kotlin.String
            GET_VAR 'value-parameter i: Int?' type=kotlin.Int? operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='box(): String'
          CALL 'foo(Int?): String' type=kotlin.String operator=null
            i: CONST Null type=kotlin.Nothing? value='null'
