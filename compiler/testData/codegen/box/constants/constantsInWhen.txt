MODULE <test-module>
  FILE /constantsInWhen.kt
    FUN public fun test(b: kotlin.Boolean, i: kotlin.Int): kotlin.Unit
      BLOCK_BODY
        WHEN type=kotlin.Int? operator=IF
          if: GET_VAR 'value-parameter b: Boolean' type=kotlin.Boolean operator=null
          then: BLOCK type=kotlin.Int? operator=null
            BLOCK type=kotlin.Int? operator=WHEN
              VAR val tmp0_subject: kotlin.Int
                GET_VAR 'value-parameter i: Int' type=kotlin.Int operator=null
              WHEN type=kotlin.Int? operator=WHEN
                if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR 'tmp0_subject: Int' type=kotlin.Int operator=null
                  arg1: CONST Int type=kotlin.Int value='0'
                then: CALL 'foo(Int): Int' type=kotlin.Int operator=null
                  i: CONST Int type=kotlin.Int value='1'
                else: CONST Null type=kotlin.Nothing? value='null'
          else: CONST Null type=kotlin.Nothing? value='null'
    FUN public fun foo(i: kotlin.Int): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo(Int): Int'
          GET_VAR 'value-parameter i: Int' type=kotlin.Int operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL 'test(Boolean, Int): Unit' type=kotlin.Unit operator=null
          b: CONST Boolean type=kotlin.Boolean value='true'
          i: CONST Int type=kotlin.Int value='1'
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
