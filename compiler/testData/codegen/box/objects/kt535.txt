MODULE <test-module>
  FILE /kt535.kt
    CLASS CLASS Identifier
      CONSTRUCTOR public constructor Identifier<T>(t: T?, myHasDollar: kotlin.Boolean)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='Identifier'
      PROPERTY private final val myT: T?
      FUN public final fun getName(): T?
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='getName(): T?'
            CALL '<get-myT>(): T?' type=T? operator=GET_PROPERTY
              $this: THIS of 'Identifier' type=Identifier<T>
      CLASS OBJECT companion object of Identifier
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
            INSTANCE_INITIALIZER_CALL classDescriptor='companion object of Identifier'
        FUN public open fun <T> init(name: T?): Identifier<T>
          BLOCK_BODY
            VAR val id: Identifier<T>
              CALL 'constructor Identifier(T?, Boolean)' type=Identifier<T> operator=null
                t: GET_VAR 'value-parameter name: T?' type=T? operator=null
                myHasDollar: CONST Boolean type=kotlin.Boolean value='false'
            RETURN type=kotlin.Nothing from='init(T?): Identifier<T>'
              GET_VAR 'id: Identifier<T>' type=Identifier<T> operator=null
      ANONYMOUS_INITIALIZER Identifier
        BLOCK_BODY
          SET_BACKING_FIELD 'myT: T?' type=kotlin.Unit operator=null
            receiver: THIS of 'Identifier' type=Identifier<T>
            value: GET_VAR 'value-parameter t: T?' type=T? operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR var i3: Identifier<kotlin.String?>?
          CALL 'init(String?): Identifier<String?>' type=Identifier<kotlin.String?> operator=null
            $this: GET_OBJECT 'companion object of Identifier' type=Identifier.Companion
            name: CONST String type=kotlin.String value='name'
        BLOCK type=kotlin.Unit? operator=SAFE_CALL
          VAR val tmp1_safe_receiver: java.io.PrintStream!
            GET_BACKING_FIELD 'out: PrintStream!' type=java.io.PrintStream! operator=GET_PROPERTY
          WHEN type=kotlin.Unit? operator=SAFE_CALL
            if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR 'tmp1_safe_receiver: PrintStream!' type=java.io.PrintStream! operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CONST Null type=kotlin.Nothing? value='null'
            else: CALL 'println(String!): Unit' type=kotlin.Unit operator=null
              $this: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=java.io.PrintStream
                GET_VAR 'tmp1_safe_receiver: PrintStream!' type=java.io.PrintStream! operator=null
              p0: BLOCK type=kotlin.String? operator=SAFE_CALL
                VAR val tmp0_safe_receiver: Identifier<kotlin.String?>?
                  GET_VAR 'i3: Identifier<String?>?' type=Identifier<kotlin.String?>? operator=null
                WHEN type=kotlin.String? operator=SAFE_CALL
                  if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
                    arg0: GET_VAR 'tmp0_safe_receiver: Identifier<String?>?' type=Identifier<kotlin.String?>? operator=null
                    arg1: CONST Null type=kotlin.Nothing? value='null'
                  then: CONST Null type=kotlin.Nothing? value='null'
                  else: CALL 'getName(): String?' type=kotlin.String? operator=null
                    $this: GET_VAR 'tmp0_safe_receiver: Identifier<String?>?' type=Identifier<kotlin.String?>? operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
