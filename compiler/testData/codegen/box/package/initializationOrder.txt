MODULE <test-module>
  FILE /initializationOrder.kt
    FUN public fun box(): kotlin.String?
      BLOCK_BODY
        VAR val log: kotlin.String!
          CALL 'getProperty(String!): String!' type=kotlin.String! operator=null
            p0: CONST String type=kotlin.String value='boxtest.log'
        CALL 'clearProperty(String!): String!' type=kotlin.String! operator=null
          p0: CONST String type=kotlin.String value='boxtest.log'
        RETURN type=kotlin.Nothing from='box(): String?'
          WHEN type=kotlin.String? operator=IF
            if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR 'log: String!' type=kotlin.String! operator=null
              arg1: CONST String type=kotlin.String value='bca'
            then: CONST String type=kotlin.String value='OK'
            else: GET_VAR 'log: String!' type=kotlin.String! operator=null
    PROPERTY public val b: kotlin.Unit
      EXPRESSION_BODY
        CALL 'log(String): Unit' type=kotlin.Unit operator=null
          message: CONST String type=kotlin.String value='b'
    PROPERTY public val c: kotlin.Unit
      EXPRESSION_BODY
        CALL 'log(String): Unit' type=kotlin.Unit operator=null
          message: CONST String type=kotlin.String value='c'
    PROPERTY public val a: kotlin.Unit
      EXPRESSION_BODY
        CALL 'log(String): Unit' type=kotlin.Unit operator=null
          message: CONST String type=kotlin.String value='a'
    FUN public fun log(message: kotlin.String): kotlin.Unit
      BLOCK_BODY
        VAR val value: kotlin.String
          CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
            $this: BLOCK type=kotlin.String operator=ELVIS
              VAR val tmp0_elvis_lhs: kotlin.String!
                CALL 'getProperty(String!): String!' type=kotlin.String! operator=null
                  p0: CONST String type=kotlin.String value='boxtest.log'
              WHEN type=kotlin.String operator=null
                if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR 'tmp0_elvis_lhs: String!' type=kotlin.String! operator=null
                  arg1: CONST Null type=kotlin.Nothing? value='null'
                then: CONST String type=kotlin.String value=''
                else: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=kotlin.String
                  GET_VAR 'tmp0_elvis_lhs: String!' type=kotlin.String! operator=null
            other: GET_VAR 'value-parameter message: String' type=kotlin.String operator=null
        CALL 'setProperty(String!, String!): String!' type=kotlin.String! operator=null
          p0: CONST String type=kotlin.String value='boxtest.log'
          p1: GET_VAR 'value: String' type=kotlin.String operator=null
