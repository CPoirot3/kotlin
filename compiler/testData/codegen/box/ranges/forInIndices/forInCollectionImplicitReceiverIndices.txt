MODULE <test-module>
  FILE /forInCollectionImplicitReceiverIndices.kt
    FUN public fun kotlin.collections.Collection<kotlin.Int>.sumIndices(): kotlin.Int
      BLOCK_BODY
        VAR var sum: kotlin.Int
          CONST Int type=kotlin.Int value='0'
        BLOCK type=kotlin.Unit operator=FOR_LOOP
          VAR val tmp0_iterator: kotlin.collections.IntIterator
            CALL 'iterator(): IntIterator' type=kotlin.collections.IntIterator operator=FOR_LOOP_ITERATOR
              $this: CALL '<get-indices>() on Collection<*>: IntRange' type=kotlin.ranges.IntRange operator=GET_PROPERTY
                $receiver: $RECEIVER of 'sumIndices() on Collection<Int>: Int' type=kotlin.collections.Collection<kotlin.Int>
          WHILE label=null operator=FOR_LOOP_INNER_WHILE
            condition: CALL 'hasNext(): Boolean' type=kotlin.Boolean operator=FOR_LOOP_HAS_NEXT
              $this: GET_VAR 'tmp0_iterator: IntIterator' type=kotlin.collections.IntIterator operator=null
            body: BLOCK type=kotlin.Unit operator=FOR_LOOP_INNER_WHILE
              VAR val i: kotlin.Int
                CALL 'next(): Int' type=kotlin.Int operator=FOR_LOOP_NEXT
                  $this: GET_VAR 'tmp0_iterator: IntIterator' type=kotlin.collections.IntIterator operator=null
              BLOCK type=kotlin.Unit operator=null
                SET_VAR 'sum: Int' type=kotlin.Unit operator=PLUSEQ
                  CALL 'plus(Int): Int' type=kotlin.Int operator=PLUSEQ
                    $this: GET_VAR 'sum: Int' type=kotlin.Int operator=PLUSEQ
                    other: GET_VAR 'i: Int' type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from='sumIndices() on Collection<Int>: Int'
          GET_VAR 'sum: Int' type=kotlin.Int operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val list: kotlin.collections.List<kotlin.Int>
          CALL 'listOf(vararg Int): List<Int>' type=kotlin.collections.List<kotlin.Int> operator=null
            elements: VARARG type=Array<out Int> varargElementType=Int
              CONST Int type=kotlin.Int value='0'
              CONST Int type=kotlin.Int value='0'
              CONST Int type=kotlin.Int value='0'
              CONST Int type=kotlin.Int value='0'
        VAR val sum: kotlin.Int
          CALL 'sumIndices() on Collection<Int>: Int' type=kotlin.Int operator=null
            $receiver: GET_VAR 'list: List<Int>' type=kotlin.collections.List<kotlin.Int> operator=null
        CALL 'assertEquals(Int, Int, String? = ...): Unit' type=kotlin.Unit operator=null
          expected: CONST Int type=kotlin.Int value='6'
          actual: GET_VAR 'sum: Int' type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
