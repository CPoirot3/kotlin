MODULE <test-module>
  FILE /callableReference.kt
    FUN @kotlin.jvm.JvmName public fun foo(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo(): String'
          CONST String type=kotlin.String value='foo'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val f: kotlin.String
          CALL 'invoke(): String' type=kotlin.String operator=null
            $this: CALLABLE_REFERENCE 'foo(): String' type=kotlin.reflect.KFunction0<kotlin.String> operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'f: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='foo'
          then: RETURN type=kotlin.Nothing from='box(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail: '
              GET_VAR 'f: String' type=kotlin.String operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
