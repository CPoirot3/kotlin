MODULE <test-module>
  FILE /simple.kt
    FUN public inline fun bar(x: kotlin.Int): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='bar(Int): Int'
          GET_VAR 'value-parameter x: Int' type=kotlin.Int operator=null
    FUN public fun foobar(x: kotlin.Int, y: kotlin.Int, z: kotlin.Int): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foobar(Int, Int, Int): Int'
          CALL 'plus(Int): Int' type=kotlin.Int operator=PLUS
            $this: CALL 'plus(Int): Int' type=kotlin.Int operator=PLUS
              $this: GET_VAR 'value-parameter x: Int' type=kotlin.Int operator=null
              other: GET_VAR 'value-parameter y: Int' type=kotlin.Int operator=null
            other: GET_VAR 'value-parameter z: Int' type=kotlin.Int operator=null
    FUN public fun foo(): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo(): Int'
          CALL 'foobar(Int, Int, Int): Int' type=kotlin.Int operator=null
            x: CONST Int type=kotlin.Int value='1'
            y: CALL 'bar(Int): Int' type=kotlin.Int operator=null
              x: CONST Int type=kotlin.Int value='2'
            z: CONST Int type=kotlin.Int value='3'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL 'assertEquals(Int, Int, String? = ...): Unit' type=kotlin.Unit operator=null
          expected: CONST Int type=kotlin.Int value='6'
          actual: CALL 'foo(): Int' type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
