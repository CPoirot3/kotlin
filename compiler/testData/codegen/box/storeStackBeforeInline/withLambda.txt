MODULE <test-module>
  FILE /withLambda.kt
    FUN public inline fun bar(x: kotlin.String, block: (kotlin.String) -> kotlin.String): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='bar(String, (String) -> String): String'
          CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
            $this: CONST String type=kotlin.String value='def'
            other: CALL 'invoke(String): String' type=kotlin.String operator=INVOKE
              $this: GET_VAR 'value-parameter block: (String) -> String' type=(kotlin.String) -> kotlin.String operator=VARIABLE_AS_FUNCTION
              p1: GET_VAR 'value-parameter x: String' type=kotlin.String operator=null
    FUN public fun foobar(x: kotlin.String, y: kotlin.String, z: kotlin.String): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foobar(String, String, String): String'
          CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
            $this: CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
              $this: GET_VAR 'value-parameter x: String' type=kotlin.String operator=null
              other: GET_VAR 'value-parameter y: String' type=kotlin.String operator=null
            other: GET_VAR 'value-parameter z: String' type=kotlin.String operator=null
    FUN public fun foo(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo(): String'
          CALL 'foobar(String, String, String): String' type=kotlin.String operator=null
            x: CONST String type=kotlin.String value='abc'
            y: CALL 'bar(String, (String) -> String): String' type=kotlin.String operator=null
              x: CONST String type=kotlin.String value='ghi'
              block: BLOCK type=(kotlin.String) -> kotlin.String operator=LAMBDA
                FUN local final fun <anonymous>(x: kotlin.String): kotlin.String
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from='<anonymous>(String): String'
                      CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
                        $this: GET_VAR 'value-parameter x: String' type=kotlin.String operator=null
                        other: CONST String type=kotlin.String value='jkl'
                CALLABLE_REFERENCE '<anonymous>(String): String' type=(kotlin.String) -> kotlin.String operator=LAMBDA
            z: CONST String type=kotlin.String value='mno'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL 'assertEquals(String, String, String? = ...): Unit' type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='abcdefghijklmno'
          actual: CALL 'foo(): String' type=kotlin.String operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
