MODULE <test-module>
  FILE /unboxComparable.kt
    FUN public fun foo(x: kotlin.Int): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo(Int): Int'
          GET_VAR 'value-parameter x: Int' type=kotlin.Int operator=null
    FUN public fun bar(x: kotlin.Comparable<kotlin.Int>): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='bar(Comparable<Int>): Int'
          WHEN type=kotlin.Int operator=IF
            if: TYPE_OP operator=INSTANCEOF typeOperand=kotlin.Int
              GET_VAR 'value-parameter x: Comparable<Int>' type=kotlin.Comparable<kotlin.Int> operator=null
            then: CALL 'foo(Int): Int' type=kotlin.Int operator=null
              x: TYPE_OP operator=IMPLICIT_CAST typeOperand=kotlin.Int
                GET_VAR 'value-parameter x: Comparable<Int>' type=kotlin.Comparable<kotlin.Int> operator=null
            else: CONST Int type=kotlin.Int value='0'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='box(): String'
          WHEN type=kotlin.String operator=IF
            if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
              arg0: CALL 'bar(Comparable<Int>): Int' type=kotlin.Int operator=null
                x: CONST Int type=kotlin.Int value='42'
              arg1: CONST Int type=kotlin.Int value='42'
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='Fail'
