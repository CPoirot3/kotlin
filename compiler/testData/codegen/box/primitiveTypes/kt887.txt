MODULE <test-module>
  FILE /kt887.kt
    CLASS CLASS Book
      CONSTRUCTOR public constructor Book(name: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          SET_BACKING_FIELD 'name: String' type=kotlin.Unit operator=null
            receiver: THIS of 'Book' type=Book
            value: GET_VAR 'value-parameter name: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor='Book'
      PROPERTY public final val name: kotlin.String
        EXPRESSION_BODY
          GET_VAR 'value-parameter name: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN public open override fun compareTo(other: Book): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='compareTo(Book): Int'
            CALL 'compareTo(String): Int' type=kotlin.Int operator=null
              $this: CALL '<get-name>(): String' type=kotlin.String operator=GET_PROPERTY
                $this: THIS of 'Book' type=Book
              other: CALL '<get-name>(): String' type=kotlin.String operator=GET_PROPERTY
                $this: GET_VAR 'value-parameter other: Book' type=Book operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='box(): String'
          WHEN type=kotlin.String operator=IF
            if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL 'compareTo(Book): Int' type=kotlin.Int operator=null
                  $this: CALL 'constructor Book(String)' type=Book operator=null
                    name: CONST String type=kotlin.String value='239'
                  other: CALL 'constructor Book(String)' type=Book operator=null
                    name: CONST String type=kotlin.String value='932'
                arg1: CONST Int type=kotlin.Int value='0'
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='fail'
