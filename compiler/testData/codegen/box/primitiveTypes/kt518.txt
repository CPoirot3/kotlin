MODULE <test-module>
  FILE /kt518.kt
    FUN public fun foo(i: kotlin.Int?, a: kotlin.Any?): kotlin.Unit
      BLOCK_BODY
        BLOCK type=kotlin.Int? operator=SAFE_CALL
          VAR val tmp0_safe_receiver: kotlin.Int?
            GET_VAR 'value-parameter i: Int?' type=kotlin.Int? operator=null
          WHEN type=kotlin.Int? operator=SAFE_CALL
            if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR 'tmp0_safe_receiver: Int?' type=kotlin.Int? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CONST Null type=kotlin.Nothing? value='null'
            else: CALL 'plus(Int): Int' type=kotlin.Int operator=null
              $this: GET_VAR 'tmp0_safe_receiver: Int?' type=kotlin.Int? operator=null
              other: CONST Int type=kotlin.Int value='1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'value-parameter i: Int?' type=kotlin.Int? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
          then: BLOCK type=kotlin.Unit operator=null
            CALL 'plus(Int): Int' type=kotlin.Int operator=PLUS
              $this: GET_VAR 'value-parameter i: Int?' type=kotlin.Int? operator=null
              other: CONST Int type=kotlin.Int value='1'
            WHEN type=kotlin.Unit operator=IF
              if: TYPE_OP operator=INSTANCEOF typeOperand=kotlin.String
                GET_VAR 'value-parameter a: Any?' type=kotlin.Any? operator=null
              then: BLOCK type=kotlin.Char operator=null
                CALL 'get(Int): Char' type=kotlin.Char operator=GET_ARRAY_ELEMENT
                  $this: TYPE_OP operator=IMPLICIT_CAST typeOperand=kotlin.String
                    GET_VAR 'value-parameter a: Any?' type=kotlin.Any? operator=null
                  index: CONST Int type=kotlin.Int value='0'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL 'foo(Int?, Any?): Unit' type=kotlin.Unit operator=null
          i: CONST Int type=kotlin.Int value='2'
          a: CONST String type=kotlin.String value='239'
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
