MODULE <test-module>
  FILE /box.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='box(): String'
          TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=kotlin.String
            CALL 'ok(): String!' type=kotlin.String! operator=null
  FILE /part1.kt
    PROPERTY public val O: kotlin.String
      EXPRESSION_BODY
        CALL 'run(() -> String): String' type=kotlin.String operator=null
          block: BLOCK type=() -> kotlin.String operator=LAMBDA
            FUN local final fun <anonymous>(): kotlin.String
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='<anonymous>(): String'
                  CONST String type=kotlin.String value='O'
            CALLABLE_REFERENCE '<anonymous>(): String' type=() -> kotlin.String operator=LAMBDA
    PROPERTY public const val K: kotlin.String = "K"
      EXPRESSION_BODY
        CONST String type=kotlin.String value='K'
    FUN public inline fun ok(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='ok(): String'
          CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
            $this: CALL '<get-O>(): String' type=kotlin.String operator=GET_PROPERTY
            other: CALL '<get-K>(): String' type=kotlin.String operator=GET_PROPERTY
