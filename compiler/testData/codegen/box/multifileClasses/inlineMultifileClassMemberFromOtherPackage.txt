MODULE <test-module>
  FILE /box.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='box(): String'
          CALL 'foo(() -> String): String' type=kotlin.String operator=null
            body: BLOCK type=() -> kotlin.String operator=LAMBDA
              FUN local final fun <anonymous>(): kotlin.String
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='<anonymous>(): String'
                    CONST String type=kotlin.String value='OK'
              CALLABLE_REFERENCE '<anonymous>(): String' type=() -> kotlin.String operator=LAMBDA
  FILE /foo.kt
    FUN public inline fun foo(body: () -> kotlin.String): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo(() -> String): String'
          CALL 'zee(String): String' type=kotlin.String operator=null
            x: CALL 'invoke(): String' type=kotlin.String operator=INVOKE
              $this: GET_VAR 'value-parameter body: () -> String' type=() -> kotlin.String operator=VARIABLE_AS_FUNCTION
  FILE /zee.kt
    FUN public fun zee(x: kotlin.String): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='zee(String): String'
          GET_VAR 'value-parameter x: String' type=kotlin.String operator=null
