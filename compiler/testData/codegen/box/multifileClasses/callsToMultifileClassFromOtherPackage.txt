MODULE <test-module>
  FILE /1.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'foo(): String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='OK'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='Fail function'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL '<get-constOK>(): String' type=kotlin.String operator=GET_PROPERTY
              arg1: CONST String type=kotlin.String value='OK'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='Fail const'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL '<get-valOK>(): String' type=kotlin.String operator=GET_PROPERTY
              arg1: CONST String type=kotlin.String value='OK'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='Fail val'
        CALL '<set-varOK>(String): Unit' type=kotlin.Unit operator=EQ
          <set-?>: CONST String type=kotlin.String value='OK'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL '<get-varOK>(): String' type=kotlin.String operator=GET_PROPERTY
              arg1: CONST String type=kotlin.String value='OK'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='Fail var'
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
  FILE /2.kt
    FUN public fun foo(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo(): String'
          CONST String type=kotlin.String value='OK'
    PROPERTY public const val constOK: kotlin.String = "OK"
      EXPRESSION_BODY
        CONST String type=kotlin.String value='OK'
    PROPERTY public val valOK: kotlin.String = "OK"
      EXPRESSION_BODY
        CONST String type=kotlin.String value='OK'
    PROPERTY public var varOK: kotlin.String
      EXPRESSION_BODY
        CONST String type=kotlin.String value='Hmmm?'
