MODULE <test-module>
  FILE /nonLocalReturnArrayConstructor.kt
    FUN public fun testArray(): kotlin.Unit
      BLOCK_BODY
        CALL 'constructor Array(Int, (Int) -> String)' type=kotlin.Array<kotlin.String> operator=null
          size: CONST Int type=kotlin.Int value='5'
          init: BLOCK type=(kotlin.Int) -> kotlin.String operator=LAMBDA
            FUN local final fun <anonymous>(i: kotlin.Int): kotlin.String
              BLOCK_BODY
                WHEN type=kotlin.Unit operator=IF
                  if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
                    arg0: GET_VAR 'value-parameter i: Int' type=kotlin.Int operator=null
                    arg1: CONST Int type=kotlin.Int value='3'
                  then: RETURN type=kotlin.Nothing from='testArray(): Unit'
                RETURN type=kotlin.Nothing from='<anonymous>(Int): String'
                  CALL 'toString(): String' type=kotlin.String operator=null
                    $this: GET_VAR 'value-parameter i: Int' type=kotlin.Int operator=null
            CALLABLE_REFERENCE '<anonymous>(Int): String' type=(kotlin.Int) -> kotlin.String operator=LAMBDA
        THROW type=kotlin.Nothing
          CALL 'constructor AssertionError()' type=java.lang.AssertionError operator=null
    FUN public fun testIntArray(): kotlin.Unit
      BLOCK_BODY
        CALL 'constructor IntArray(Int, (Int) -> Int)' type=kotlin.IntArray operator=null
          size: CONST Int type=kotlin.Int value='5'
          init: BLOCK type=(kotlin.Int) -> kotlin.Int operator=LAMBDA
            FUN local final fun <anonymous>(i: kotlin.Int): kotlin.Int
              BLOCK_BODY
                WHEN type=kotlin.Unit operator=IF
                  if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
                    arg0: GET_VAR 'value-parameter i: Int' type=kotlin.Int operator=null
                    arg1: CONST Int type=kotlin.Int value='3'
                  then: RETURN type=kotlin.Nothing from='testIntArray(): Unit'
                RETURN type=kotlin.Nothing from='<anonymous>(Int): Int'
                  GET_VAR 'value-parameter i: Int' type=kotlin.Int operator=null
            CALLABLE_REFERENCE '<anonymous>(Int): Int' type=(kotlin.Int) -> kotlin.Int operator=LAMBDA
        THROW type=kotlin.Nothing
          CALL 'constructor AssertionError()' type=java.lang.AssertionError operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL 'testArray(): Unit' type=kotlin.Unit operator=null
        CALL 'testIntArray(): Unit' type=kotlin.Unit operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
