MODULE <test-module>
  FILE /memberFunctionManyArgs.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='A'
      FUN public final fun foo(a: kotlin.Int = ..., b: kotlin.Int = ..., c: kotlin.Int = ..., d: kotlin.Int = ..., e: kotlin.Int = ..., f: kotlin.Int = ..., g: kotlin.Int = ..., h: kotlin.Int = ..., i: kotlin.Int = ..., j: kotlin.Int = ..., k: kotlin.Int = ..., l: kotlin.Int = ..., m: kotlin.Int = ..., n: kotlin.Int = ..., o: kotlin.Int = ..., p: kotlin.Int = ..., q: kotlin.Int = ..., r: kotlin.Int = ..., s: kotlin.Int = ..., t: kotlin.Int = ..., u: kotlin.Int = ..., v: kotlin.Int = ..., w: kotlin.Int = ..., x: kotlin.Int = ..., y: kotlin.Int = ..., z: kotlin.Int = ..., aa: kotlin.Int = ..., bb: kotlin.Int = ..., cc: kotlin.Int = ..., dd: kotlin.Int = ..., ee: kotlin.Int = ..., ff: kotlin.Int = ...): kotlin.String
        a: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='1'
        b: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='2'
        c: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='3'
        d: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='4'
        e: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='5'
        f: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='6'
        g: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='7'
        h: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='8'
        i: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='9'
        j: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='10'
        k: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='11'
        l: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='12'
        m: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='13'
        n: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='14'
        o: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='15'
        p: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='16'
        q: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='17'
        r: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='18'
        s: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='19'
        t: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='20'
        u: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='21'
        v: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='22'
        w: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='23'
        x: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='24'
        y: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='25'
        z: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='26'
        aa: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='27'
        bb: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='28'
        cc: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='29'
        dd: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='30'
        ee: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='31'
        ff: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='32'
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='foo(Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ...): String'
            STRING_CONCATENATION type=kotlin.String
              GET_VAR 'value-parameter a: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter b: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter c: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter d: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter e: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter f: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter g: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter h: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter i: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter j: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter k: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter l: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter m: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter n: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter o: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter p: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter q: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter r: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter s: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter t: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter u: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter v: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter w: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter x: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter y: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter z: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter aa: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter bb: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter cc: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter dd: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter ee: Int = ...' type=kotlin.Int operator=null
              CONST String type=kotlin.String value=' '
              GET_VAR 'value-parameter ff: Int = ...' type=kotlin.Int operator=null
      FUN public final fun bar(a: kotlin.Int = ..., b: kotlin.Int = ..., c: kotlin.Int = ..., d: kotlin.Int = ..., e: kotlin.Int = ..., f: kotlin.Int = ..., g: kotlin.Int = ..., h: kotlin.Int = ..., i: kotlin.Int = ..., j: kotlin.Int = ..., k: kotlin.Int = ..., l: kotlin.Int = ..., m: kotlin.Int = ..., n: kotlin.Int = ..., o: kotlin.Int = ..., p: kotlin.Int = ..., q: kotlin.Int = ..., r: kotlin.Int = ..., s: kotlin.Int = ..., t: kotlin.Int = ..., u: kotlin.Int = ..., v: kotlin.Int = ..., w: kotlin.Int = ..., x: kotlin.Int = ..., y: kotlin.Int = ..., z: kotlin.Int = ..., aa: kotlin.Int = ..., bb: kotlin.Int = ..., cc: kotlin.Int = ..., dd: kotlin.Int = ..., ee: kotlin.Int = ..., ff: kotlin.Int = ..., gg: kotlin.Int = ..., hh: kotlin.Int = ..., ii: kotlin.Int = ..., jj: kotlin.Int = ..., kk: kotlin.Int = ..., ll: kotlin.Int = ..., mm: kotlin.Int = ..., nn: kotlin.Int = ...): kotlin.String
        a: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='1'
        b: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='2'
        c: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='3'
        d: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='4'
        e: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='5'
        f: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='6'
        g: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='7'
        h: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='8'
        i: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='9'
        j: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='10'
        k: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='11'
        l: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='12'
        m: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='13'
        n: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='14'
        o: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='15'
        p: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='16'
        q: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='17'
        r: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='18'
        s: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='19'
        t: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='20'
        u: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='21'
        v: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='22'
        w: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='23'
        x: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='24'
        y: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='25'
        z: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='26'
        aa: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='27'
        bb: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='28'
        cc: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='29'
        dd: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='30'
        ee: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='31'
        ff: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='32'
        gg: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='33'
        hh: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='34'
        ii: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='35'
        jj: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='36'
        kk: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='37'
        ll: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='38'
        mm: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='39'
        nn: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='40'
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='bar(Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ...): String'
            CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
              $this: STRING_CONCATENATION type=kotlin.String
                GET_VAR 'value-parameter a: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter b: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter c: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter d: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter e: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter f: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter g: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter h: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter i: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter j: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter k: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter l: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter m: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter n: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter o: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter p: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter q: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter r: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter s: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter t: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter u: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter v: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter w: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter x: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter y: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter z: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter aa: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter bb: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter cc: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter dd: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter ee: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter ff: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
              other: STRING_CONCATENATION type=kotlin.String
                GET_VAR 'value-parameter gg: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter hh: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter ii: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter jj: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter kk: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter ll: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter mm: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter nn: Int = ...' type=kotlin.Int operator=null
      FUN public final fun baz(a: kotlin.Int = ..., b: kotlin.Int = ..., c: kotlin.Int = ..., d: kotlin.Int = ..., e: kotlin.Int = ..., f: kotlin.Int = ..., g: kotlin.Int = ..., h: kotlin.Int = ..., i: kotlin.Int = ..., j: kotlin.Int = ..., k: kotlin.Int = ..., l: kotlin.Int = ..., m: kotlin.Int = ..., n: kotlin.Int = ..., o: kotlin.Int = ..., p: kotlin.Int = ..., q: kotlin.Int = ..., r: kotlin.Int = ..., s: kotlin.Int = ..., t: kotlin.Int = ..., u: kotlin.Int = ..., v: kotlin.Int = ..., w: kotlin.Int = ..., x: kotlin.Int = ..., y: kotlin.Int = ..., z: kotlin.Int = ..., aa: kotlin.Int = ..., bb: kotlin.Int = ..., cc: kotlin.Int = ..., dd: kotlin.Int = ..., ee: kotlin.Int = ..., ff: kotlin.Int = ..., gg: kotlin.Int = ..., hh: kotlin.Int = ..., ii: kotlin.Int = ..., jj: kotlin.Int = ..., kk: kotlin.Int = ..., ll: kotlin.Int = ..., mm: kotlin.Int = ..., nn: kotlin.Int = ..., oo: kotlin.Int = ..., pp: kotlin.Int = ..., qq: kotlin.Int = ..., rr: kotlin.Int = ..., ss: kotlin.Int = ..., tt: kotlin.Int = ..., uu: kotlin.Int = ..., vv: kotlin.Int = ..., ww: kotlin.Int = ..., xx: kotlin.Int = ..., yy: kotlin.Int = ..., zz: kotlin.Int = ..., aaa: kotlin.Int = ..., bbb: kotlin.Int = ..., ccc: kotlin.Int = ..., ddd: kotlin.Int = ..., eee: kotlin.Int = ..., fff: kotlin.Int = ..., ggg: kotlin.Int = ..., hhh: kotlin.Int = ..., iii: kotlin.Int = ..., jjj: kotlin.Int = ..., kkk: kotlin.Int = ..., lll: kotlin.Int = ..., mmm: kotlin.Int = ..., nnn: kotlin.Int = ..., ooo: kotlin.Int = ..., ppp: kotlin.Int = ..., qqq: kotlin.Int = ..., rrr: kotlin.Int = ...): kotlin.String
        a: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='1'
        b: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='2'
        c: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='3'
        d: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='4'
        e: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='5'
        f: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='6'
        g: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='7'
        h: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='8'
        i: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='9'
        j: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='10'
        k: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='11'
        l: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='12'
        m: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='13'
        n: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='14'
        o: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='15'
        p: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='16'
        q: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='17'
        r: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='18'
        s: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='19'
        t: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='20'
        u: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='21'
        v: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='22'
        w: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='23'
        x: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='24'
        y: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='25'
        z: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='26'
        aa: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='27'
        bb: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='28'
        cc: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='29'
        dd: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='30'
        ee: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='31'
        ff: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='32'
        gg: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='33'
        hh: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='34'
        ii: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='35'
        jj: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='36'
        kk: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='37'
        ll: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='38'
        mm: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='39'
        nn: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='40'
        oo: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='41'
        pp: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='42'
        qq: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='43'
        rr: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='44'
        ss: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='45'
        tt: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='46'
        uu: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='47'
        vv: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='48'
        ww: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='49'
        xx: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='50'
        yy: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='51'
        zz: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='52'
        aaa: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='53'
        bbb: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='54'
        ccc: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='55'
        ddd: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='56'
        eee: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='57'
        fff: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='58'
        ggg: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='59'
        hhh: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='60'
        iii: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='61'
        jjj: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='62'
        kkk: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='63'
        lll: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='64'
        mmm: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='65'
        nnn: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='66'
        ooo: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='67'
        ppp: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='68'
        qqq: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='69'
        rrr: EXPRESSION_BODY
          CONST Int type=kotlin.Int value='70'
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='baz(Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ...): String'
            CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
              $this: CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
                $this: STRING_CONCATENATION type=kotlin.String
                  GET_VAR 'value-parameter a: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter b: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter c: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter d: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter e: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter f: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter g: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter h: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter i: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter j: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter k: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter l: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter m: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter n: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter o: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter p: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter q: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter r: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter s: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter t: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter u: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter v: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter w: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter x: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter y: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter z: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter aa: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter bb: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter cc: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter dd: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter ee: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter ff: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter gg: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter hh: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter ii: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter jj: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter kk: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                other: STRING_CONCATENATION type=kotlin.String
                  GET_VAR 'value-parameter ll: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter mm: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter nn: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter oo: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter pp: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter qq: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter rr: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter ss: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter tt: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter uu: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter vv: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter ww: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter xx: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter yy: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter zz: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter aaa: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter bbb: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter ccc: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter ddd: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter eee: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter fff: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter ggg: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter hhh: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter iii: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter jjj: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter kkk: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
                  GET_VAR 'value-parameter lll: Int = ...' type=kotlin.Int operator=null
                  CONST String type=kotlin.String value=' '
              other: STRING_CONCATENATION type=kotlin.String
                GET_VAR 'value-parameter mmm: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter nnn: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter ooo: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter ppp: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter qqq: Int = ...' type=kotlin.Int operator=null
                CONST String type=kotlin.String value=' '
                GET_VAR 'value-parameter rrr: Int = ...' type=kotlin.Int operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val a: A
          CALL 'constructor A()' type=A operator=null
        VAR val test1: kotlin.String
          CALL 'foo(Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ...): String' type=kotlin.String operator=null
            $this: GET_VAR 'a: A' type=A operator=null
            a: CONST Int type=kotlin.Int value='4'
            e: CONST Int type=kotlin.Int value='8'
            f: CONST Int type=kotlin.Int value='15'
            w: CONST Int type=kotlin.Int value='16'
            aa: CONST Int type=kotlin.Int value='23'
            ff: CONST Int type=kotlin.Int value='42'
        VAR val test2: kotlin.String
          CALL 'foo(Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ...): String' type=kotlin.String operator=null
            $this: GET_VAR 'a: A' type=A operator=null
        VAR val test3: kotlin.String
          CALL 'foo(Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ...): String' type=kotlin.String operator=null
            $this: GET_VAR 'a: A' type=A operator=null
            a: CONST Int type=kotlin.Int value='32'
            b: CONST Int type=kotlin.Int value='31'
            c: CONST Int type=kotlin.Int value='30'
            d: CONST Int type=kotlin.Int value='29'
            e: CONST Int type=kotlin.Int value='28'
            f: CONST Int type=kotlin.Int value='27'
            g: CONST Int type=kotlin.Int value='26'
            h: CONST Int type=kotlin.Int value='25'
            i: CONST Int type=kotlin.Int value='24'
            j: CONST Int type=kotlin.Int value='23'
            k: CONST Int type=kotlin.Int value='22'
            l: CONST Int type=kotlin.Int value='21'
            m: CONST Int type=kotlin.Int value='20'
            n: CONST Int type=kotlin.Int value='19'
            o: CONST Int type=kotlin.Int value='18'
            p: CONST Int type=kotlin.Int value='17'
            q: CONST Int type=kotlin.Int value='16'
            r: CONST Int type=kotlin.Int value='15'
            s: CONST Int type=kotlin.Int value='14'
            t: CONST Int type=kotlin.Int value='13'
            u: CONST Int type=kotlin.Int value='12'
            v: CONST Int type=kotlin.Int value='11'
            w: CONST Int type=kotlin.Int value='10'
            x: CONST Int type=kotlin.Int value='9'
            y: CONST Int type=kotlin.Int value='8'
            z: CONST Int type=kotlin.Int value='7'
            aa: CONST Int type=kotlin.Int value='6'
            bb: CONST Int type=kotlin.Int value='5'
            cc: CONST Int type=kotlin.Int value='4'
            dd: CONST Int type=kotlin.Int value='3'
            ee: CONST Int type=kotlin.Int value='2'
            ff: CONST Int type=kotlin.Int value='1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'test1: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='4 2 3 4 8 15 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 16 24 25 26 23 28 29 30 31 42'
          then: BLOCK type=kotlin.Nothing operator=null
            RETURN type=kotlin.Nothing from='box(): String'
              STRING_CONCATENATION type=kotlin.String
                CONST String type=kotlin.String value='test1 = '
                GET_VAR 'test1: String' type=kotlin.String operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'test2: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32'
          then: BLOCK type=kotlin.Nothing operator=null
            RETURN type=kotlin.Nothing from='box(): String'
              STRING_CONCATENATION type=kotlin.String
                CONST String type=kotlin.String value='test2 = '
                GET_VAR 'test2: String' type=kotlin.String operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'test3: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1'
          then: BLOCK type=kotlin.Nothing operator=null
            RETURN type=kotlin.Nothing from='box(): String'
              STRING_CONCATENATION type=kotlin.String
                CONST String type=kotlin.String value='test3 = '
                GET_VAR 'test3: String' type=kotlin.String operator=null
        VAR val test4: kotlin.String
          CALL 'bar(Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ...): String' type=kotlin.String operator=null
            $this: GET_VAR 'a: A' type=A operator=null
            a: CONST Int type=kotlin.Int value='54'
            b: CONST Int type=kotlin.Int value='217'
            h: CONST Int type=kotlin.Int value='236'
            l: CONST Int type=kotlin.Int value='18'
            q: CONST Int type=kotlin.Int value='3216'
            u: CONST Int type=kotlin.Int value='8'
            aa: CONST Int type=kotlin.Int value='22'
            ff: CONST Int type=kotlin.Int value='33'
            jj: CONST Int type=kotlin.Int value='44'
            mm: CONST Int type=kotlin.Int value='55'
        VAR val test5: kotlin.String
          CALL 'bar(Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ...): String' type=kotlin.String operator=null
            $this: GET_VAR 'a: A' type=A operator=null
        VAR val test6: kotlin.String
          CALL 'bar(Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ...): String' type=kotlin.String operator=null
            $this: GET_VAR 'a: A' type=A operator=null
            a: CONST Int type=kotlin.Int value='40'
            b: CONST Int type=kotlin.Int value='39'
            c: CONST Int type=kotlin.Int value='38'
            d: CONST Int type=kotlin.Int value='37'
            e: CONST Int type=kotlin.Int value='36'
            f: CONST Int type=kotlin.Int value='35'
            g: CONST Int type=kotlin.Int value='34'
            h: CONST Int type=kotlin.Int value='33'
            i: CONST Int type=kotlin.Int value='32'
            j: CONST Int type=kotlin.Int value='31'
            k: CONST Int type=kotlin.Int value='30'
            l: CONST Int type=kotlin.Int value='29'
            m: CONST Int type=kotlin.Int value='28'
            n: CONST Int type=kotlin.Int value='27'
            o: CONST Int type=kotlin.Int value='26'
            p: CONST Int type=kotlin.Int value='25'
            q: CONST Int type=kotlin.Int value='24'
            r: CONST Int type=kotlin.Int value='23'
            s: CONST Int type=kotlin.Int value='22'
            t: CONST Int type=kotlin.Int value='21'
            u: CONST Int type=kotlin.Int value='20'
            v: CONST Int type=kotlin.Int value='19'
            w: CONST Int type=kotlin.Int value='18'
            x: CONST Int type=kotlin.Int value='17'
            y: CONST Int type=kotlin.Int value='16'
            z: CONST Int type=kotlin.Int value='15'
            aa: CONST Int type=kotlin.Int value='14'
            bb: CONST Int type=kotlin.Int value='13'
            cc: CONST Int type=kotlin.Int value='12'
            dd: CONST Int type=kotlin.Int value='11'
            ee: CONST Int type=kotlin.Int value='10'
            ff: CONST Int type=kotlin.Int value='9'
            gg: CONST Int type=kotlin.Int value='8'
            hh: CONST Int type=kotlin.Int value='7'
            ii: CONST Int type=kotlin.Int value='6'
            jj: CONST Int type=kotlin.Int value='5'
            kk: CONST Int type=kotlin.Int value='4'
            ll: CONST Int type=kotlin.Int value='3'
            mm: CONST Int type=kotlin.Int value='2'
            nn: CONST Int type=kotlin.Int value='1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'test4: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='54 217 3 4 5 6 7 236 9 10 11 18 13 14 15 16 3216 18 19 20 8 22 23 24 25 26 22 28 29 30 31 33 33 34 35 44 37 38 55 40'
          then: BLOCK type=kotlin.Nothing operator=null
            RETURN type=kotlin.Nothing from='box(): String'
              STRING_CONCATENATION type=kotlin.String
                CONST String type=kotlin.String value='test4 = '
                GET_VAR 'test4: String' type=kotlin.String operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'test5: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40'
          then: BLOCK type=kotlin.Nothing operator=null
            RETURN type=kotlin.Nothing from='box(): String'
              STRING_CONCATENATION type=kotlin.String
                CONST String type=kotlin.String value='test5 = '
                GET_VAR 'test5: String' type=kotlin.String operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'test6: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1'
          then: BLOCK type=kotlin.Nothing operator=null
            RETURN type=kotlin.Nothing from='box(): String'
              STRING_CONCATENATION type=kotlin.String
                CONST String type=kotlin.String value='test6 = '
                GET_VAR 'test6: String' type=kotlin.String operator=null
        VAR val test7: kotlin.String
          CALL 'baz(Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ...): String' type=kotlin.String operator=null
            $this: GET_VAR 'a: A' type=A operator=null
            a: CONST Int type=kotlin.Int value='5'
            f: CONST Int type=kotlin.Int value='3'
            w: CONST Int type=kotlin.Int value='1'
            aa: CONST Int type=kotlin.Int value='71'
            nn: CONST Int type=kotlin.Int value='2'
            qq: CONST Int type=kotlin.Int value='15'
            ww: CONST Int type=kotlin.Int value='97'
            aaa: CONST Int type=kotlin.Int value='261258'
            iii: CONST Int type=kotlin.Int value='3'
            nnn: CONST Int type=kotlin.Int value='8'
            rrr: CONST Int type=kotlin.Int value='7'
        VAR val test8: kotlin.String
          CALL 'baz(Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ...): String' type=kotlin.String operator=null
            $this: GET_VAR 'a: A' type=A operator=null
        VAR val test9: kotlin.String
          CALL 'baz(Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ..., Int = ...): String' type=kotlin.String operator=null
            $this: GET_VAR 'a: A' type=A operator=null
            a: CONST Int type=kotlin.Int value='70'
            b: CONST Int type=kotlin.Int value='69'
            c: CONST Int type=kotlin.Int value='68'
            d: CONST Int type=kotlin.Int value='67'
            e: CONST Int type=kotlin.Int value='66'
            f: CONST Int type=kotlin.Int value='65'
            g: CONST Int type=kotlin.Int value='64'
            h: CONST Int type=kotlin.Int value='63'
            i: CONST Int type=kotlin.Int value='62'
            j: CONST Int type=kotlin.Int value='61'
            k: CONST Int type=kotlin.Int value='60'
            l: CONST Int type=kotlin.Int value='59'
            m: CONST Int type=kotlin.Int value='58'
            n: CONST Int type=kotlin.Int value='57'
            o: CONST Int type=kotlin.Int value='56'
            p: CONST Int type=kotlin.Int value='55'
            q: CONST Int type=kotlin.Int value='54'
            r: CONST Int type=kotlin.Int value='53'
            s: CONST Int type=kotlin.Int value='52'
            t: CONST Int type=kotlin.Int value='51'
            u: CONST Int type=kotlin.Int value='50'
            v: CONST Int type=kotlin.Int value='49'
            w: CONST Int type=kotlin.Int value='48'
            x: CONST Int type=kotlin.Int value='47'
            y: CONST Int type=kotlin.Int value='46'
            z: CONST Int type=kotlin.Int value='45'
            aa: CONST Int type=kotlin.Int value='44'
            bb: CONST Int type=kotlin.Int value='43'
            cc: CONST Int type=kotlin.Int value='42'
            dd: CONST Int type=kotlin.Int value='41'
            ee: CONST Int type=kotlin.Int value='40'
            ff: CONST Int type=kotlin.Int value='39'
            gg: CONST Int type=kotlin.Int value='38'
            hh: CONST Int type=kotlin.Int value='37'
            ii: CONST Int type=kotlin.Int value='36'
            jj: CONST Int type=kotlin.Int value='35'
            kk: CONST Int type=kotlin.Int value='34'
            ll: CONST Int type=kotlin.Int value='33'
            mm: CONST Int type=kotlin.Int value='32'
            nn: CONST Int type=kotlin.Int value='31'
            oo: CONST Int type=kotlin.Int value='30'
            pp: CONST Int type=kotlin.Int value='29'
            qq: CONST Int type=kotlin.Int value='28'
            rr: CONST Int type=kotlin.Int value='27'
            ss: CONST Int type=kotlin.Int value='26'
            tt: CONST Int type=kotlin.Int value='25'
            uu: CONST Int type=kotlin.Int value='24'
            vv: CONST Int type=kotlin.Int value='23'
            ww: CONST Int type=kotlin.Int value='22'
            xx: CONST Int type=kotlin.Int value='21'
            yy: CONST Int type=kotlin.Int value='20'
            zz: CONST Int type=kotlin.Int value='19'
            aaa: CONST Int type=kotlin.Int value='18'
            bbb: CONST Int type=kotlin.Int value='17'
            ccc: CONST Int type=kotlin.Int value='16'
            ddd: CONST Int type=kotlin.Int value='15'
            eee: CONST Int type=kotlin.Int value='14'
            fff: CONST Int type=kotlin.Int value='13'
            ggg: CONST Int type=kotlin.Int value='12'
            hhh: CONST Int type=kotlin.Int value='11'
            iii: CONST Int type=kotlin.Int value='10'
            jjj: CONST Int type=kotlin.Int value='9'
            kkk: CONST Int type=kotlin.Int value='8'
            lll: CONST Int type=kotlin.Int value='7'
            mmm: CONST Int type=kotlin.Int value='6'
            nnn: CONST Int type=kotlin.Int value='5'
            ooo: CONST Int type=kotlin.Int value='4'
            ppp: CONST Int type=kotlin.Int value='3'
            qqq: CONST Int type=kotlin.Int value='2'
            rrr: CONST Int type=kotlin.Int value='1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'test7: String' type=kotlin.String operator=null
              arg1: CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
                $this: CONST String type=kotlin.String value='5 2 3 4 5 3 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 1 24 25 26 71 28 29 30 31 32 33 34 35 36 37 38 39 2 41 42 15 '
                other: CONST String type=kotlin.String value='44 45 46 47 48 97 50 51 52 261258 54 55 56 57 58 59 60 3 62 63 64 65 8 67 68 69 7'
          then: BLOCK type=kotlin.Nothing operator=null
            RETURN type=kotlin.Nothing from='box(): String'
              STRING_CONCATENATION type=kotlin.String
                CONST String type=kotlin.String value='test7 = '
                GET_VAR 'test7: String' type=kotlin.String operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'test8: String' type=kotlin.String operator=null
              arg1: CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
                $this: CONST String type=kotlin.String value='1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 '
                other: CONST String type=kotlin.String value='43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70'
          then: BLOCK type=kotlin.Nothing operator=null
            RETURN type=kotlin.Nothing from='box(): String'
              STRING_CONCATENATION type=kotlin.String
                CONST String type=kotlin.String value='test8 = '
                GET_VAR 'test8: String' type=kotlin.String operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'test9: String' type=kotlin.String operator=null
              arg1: CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
                $this: CONST String type=kotlin.String value='70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 '
                other: CONST String type=kotlin.String value='31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1'
          then: BLOCK type=kotlin.Nothing operator=null
            RETURN type=kotlin.Nothing from='box(): String'
              STRING_CONCATENATION type=kotlin.String
                CONST String type=kotlin.String value='test9 = '
                GET_VAR 'test9: String' type=kotlin.String operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
