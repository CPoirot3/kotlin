MODULE <test-module>
  FILE /value.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR var obj: java.lang.Object
          TYPE_OP operator=CAST typeOperand=java.lang.Object
            CONST String type=kotlin.String value='0'
        VAR val result: kotlin.Int
          CALL 'synchronized(Any, () -> Int): Int' type=kotlin.Int operator=null
            lock: GET_VAR 'obj: Object' type=java.lang.Object operator=null
            block: BLOCK type=() -> kotlin.Int operator=LAMBDA
              FUN local final fun <anonymous>(): kotlin.Int
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='<anonymous>(): Int'
                    CONST Int type=kotlin.Int value='239'
              CALLABLE_REFERENCE '<anonymous>(): Int' type=() -> kotlin.Int operator=LAMBDA
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: GET_VAR 'result: Int' type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='239'
          then: RETURN type=kotlin.Nothing from='box(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail: '
              GET_VAR 'result: Int' type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
