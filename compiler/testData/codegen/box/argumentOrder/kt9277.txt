MODULE <test-module>
  FILE /kt9277.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL 'foo(Int?): Unit' type=kotlin.Unit operator=null
          x: CONST Null type=kotlin.Nothing? value='null'
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
    FUN public fun foo(x: kotlin.Int?): kotlin.Unit
      BLOCK_BODY
        BLOCK type=kotlin.Unit operator=ARGUMENTS_REORDERING_FOR_CALL
          VAR val tmp1_z: kotlin.Int
            BLOCK type=kotlin.Int operator=ELVIS
              VAR val tmp0_elvis_lhs: kotlin.Int?
                GET_VAR 'value-parameter x: Int?' type=kotlin.Int? operator=null
              WHEN type=kotlin.Int operator=null
                if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
                  arg0: GET_VAR 'tmp0_elvis_lhs: Int?' type=kotlin.Int? operator=null
                  arg1: CONST Null type=kotlin.Nothing? value='null'
                then: RETURN type=kotlin.Nothing from='foo(Int?): Unit'
                else: GET_VAR 'tmp0_elvis_lhs: Int?' type=kotlin.Int? operator=null
          VAR val tmp2_y: kotlin.Int?
            GET_VAR 'value-parameter x: Int?' type=kotlin.Int? operator=null
          CALL 'bar(Int, Int): Unit' type=kotlin.Unit operator=null
            y: GET_VAR 'tmp2_y: Int?' type=kotlin.Int? operator=null
            z: GET_VAR 'tmp1_z: Int' type=kotlin.Int operator=null
    FUN public fun bar(y: kotlin.Int, z: kotlin.Int): kotlin.Unit
      BLOCK_BODY
