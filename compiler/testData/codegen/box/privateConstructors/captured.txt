MODULE <test-module>
  FILE /captured.kt
    CLASS CLASS Outer
      CONSTRUCTOR private constructor Outer(s: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          SET_BACKING_FIELD 's: String' type=kotlin.Unit operator=null
            receiver: THIS of 'Outer' type=Outer
            value: GET_VAR 'value-parameter s: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor='Outer'
      PROPERTY public final val s: kotlin.String
        EXPRESSION_BODY
          GET_VAR 'value-parameter s: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      CLASS OBJECT companion object of Outer
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
            INSTANCE_INITIALIZER_CALL classDescriptor='companion object of Outer'
        FUN public final fun test(): Outer
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='test(): Outer'
              CALL 'invoke(): Outer' type=Outer operator=null
                $this: BLOCK type=() -> Outer operator=LAMBDA
                  FUN local final fun <anonymous>(): Outer
                    BLOCK_BODY
                      RETURN type=kotlin.Nothing from='<anonymous>(): Outer'
                        CALL 'constructor Outer(String)' type=Outer operator=null
                          s: CONST String type=kotlin.String value='OK'
                  CALLABLE_REFERENCE '<anonymous>(): Outer' type=() -> Outer operator=LAMBDA
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='box(): String'
          CALL '<get-s>(): String' type=kotlin.String operator=GET_PROPERTY
            $this: CALL 'test(): Outer' type=Outer operator=null
              $this: GET_OBJECT 'companion object of Outer' type=Outer.Companion
