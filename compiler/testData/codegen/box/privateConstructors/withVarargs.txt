MODULE <test-module>
  FILE /withVarargs.kt
    CLASS CLASS Outer
      CONSTRUCTOR private constructor Outer(s: kotlin.String, vararg i: kotlin.Int)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          SET_BACKING_FIELD 's: String' type=kotlin.Unit operator=null
            receiver: THIS of 'Outer' type=Outer
            value: GET_VAR 'value-parameter s: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor='Outer'
      PROPERTY public final val s: kotlin.String
        EXPRESSION_BODY
          GET_VAR 'value-parameter s: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      CLASS CLASS Inner
        CONSTRUCTOR public constructor Inner()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'constructor Outer(String, vararg Int)'
              s: CONST String type=kotlin.String value='xyz'
            INSTANCE_INITIALIZER_CALL classDescriptor='Inner'
      CLASS CLASS Other
        CONSTRUCTOR public constructor Other()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'constructor Outer(String, vararg Int)'
              s: CONST String type=kotlin.String value='abc'
              i: VARARG type=IntArray varargElementType=Int
                CONST Int type=kotlin.Int value='1'
                CONST Int type=kotlin.Int value='2'
                CONST Int type=kotlin.Int value='3'
            INSTANCE_INITIALIZER_CALL classDescriptor='Other'
      CLASS CLASS Another
        CONSTRUCTOR public constructor Another()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'constructor Outer(String, vararg Int)'
              s: CONST String type=kotlin.String value=''
              i: VARARG type=IntArray varargElementType=Int
                CONST Int type=kotlin.Int value='42'
            INSTANCE_INITIALIZER_CALL classDescriptor='Another'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val outer: Outer.Inner
          CALL 'constructor Inner()' type=Outer.Inner operator=null
        VAR val other: Outer.Other
          CALL 'constructor Other()' type=Outer.Other operator=null
        VAR val another: Outer.Another
          CALL 'constructor Another()' type=Outer.Another operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
