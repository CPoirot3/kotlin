MODULE <test-module>
  FILE /doubleMerge.kt
    FUN public fun foo(): kotlin.Double
      BLOCK_BODY
        VAR var d: kotlin.Double
          CONST Double type=kotlin.Double value='2.0'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'GT0(Int): Boolean' type=kotlin.Boolean operator=GT
            arg0: CALL 'compareTo(Double): Int' type=kotlin.Int operator=GT
              $this: GET_VAR 'd: Double' type=kotlin.Double operator=null
              other: CONST Double type=kotlin.Double value='0.0'
          then: BLOCK type=kotlin.Double operator=null
            BLOCK type=kotlin.Double operator=POSTFIX_INCR
              VAR val tmp0: kotlin.Double
                GET_VAR 'd: Double' type=kotlin.Double operator=POSTFIX_INCR
              SET_VAR 'd: Double' type=kotlin.Unit operator=POSTFIX_INCR
                CALL 'inc(): Double' type=kotlin.Double operator=POSTFIX_INCR
                  $this: GET_VAR 'tmp0: Double' type=kotlin.Double operator=null
              GET_VAR 'tmp0: Double' type=kotlin.Double operator=null
        BLOCK type=kotlin.Double operator=POSTFIX_INCR
          VAR val tmp1: kotlin.Double
            GET_VAR 'd: Double' type=kotlin.Double operator=POSTFIX_INCR
          SET_VAR 'd: Double' type=kotlin.Unit operator=POSTFIX_INCR
            CALL 'inc(): Double' type=kotlin.Double operator=POSTFIX_INCR
              $this: GET_VAR 'tmp1: Double' type=kotlin.Double operator=null
          GET_VAR 'tmp1: Double' type=kotlin.Double operator=null
        RETURN type=kotlin.Nothing from='foo(): Double'
          GET_VAR 'd: Double' type=kotlin.Double operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='box(): String'
          WHEN type=kotlin.String operator=IF
            if: CALL 'GT0(Int): Boolean' type=kotlin.Boolean operator=GT
              arg0: CALL 'compareTo(Double): Int' type=kotlin.Int operator=GT
                $this: CALL 'foo(): Double' type=kotlin.Double operator=null
                other: CONST Double type=kotlin.Double value='3.5'
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='Fail'
