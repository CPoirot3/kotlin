MODULE <test-module>
  FILE /foldRange.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val result: kotlin.Int
          CALL 'fold(Int, (Int, Int) -> Int) on Iterable<Int>: Int' type=kotlin.Int operator=null
            $receiver: CALL 'rangeTo(Int): IntRange' type=kotlin.ranges.IntRange operator=RANGE
              $this: CONST Int type=kotlin.Int value='1'
              other: CONST Int type=kotlin.Int value='5'
            initial: CONST Int type=kotlin.Int value='0'
            operation: BLOCK type=(kotlin.Int, kotlin.Int) -> kotlin.Int operator=LAMBDA
              FUN local final fun <anonymous>(x: kotlin.Int, y: kotlin.Int): kotlin.Int
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='<anonymous>(Int, Int): Int'
                    CALL 'plus(Int): Int' type=kotlin.Int operator=PLUS
                      $this: GET_VAR 'value-parameter x: Int' type=kotlin.Int operator=null
                      other: GET_VAR 'value-parameter y: Int' type=kotlin.Int operator=null
              CALLABLE_REFERENCE '<anonymous>(Int, Int): Int' type=(kotlin.Int, kotlin.Int) -> kotlin.Int operator=LAMBDA
        CALL 'assertEquals(Int, Int, String? = ...): Unit' type=kotlin.Unit operator=null
          expected: CONST Int type=kotlin.Int value='15'
          actual: GET_VAR 'result: Int' type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
