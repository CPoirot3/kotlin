MODULE <test-module>
  FILE /traitImplDelegationWithCovariantOverride.kt
    CLASS INTERFACE A
      FUN public open fun foo(): kotlin.Number
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='foo(): Number'
            CONST Int type=kotlin.Int value='42'
    CLASS INTERFACE B
    CLASS CLASS C
      CONSTRUCTOR public constructor C()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='C'
      FUN public open override fun foo(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='foo(): Int'
            TYPE_OP operator=CAST typeOperand=kotlin.Int
              CALL 'foo(): Number' superQualifier=B type=kotlin.Number operator=null
                $this: THIS of 'C' type=B
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val x: kotlin.Int
          CALL 'foo(): Int' type=kotlin.Int operator=null
            $this: CALL 'constructor C()' type=C operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          WHEN type=kotlin.String operator=IF
            if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR 'x: Int' type=kotlin.Int operator=null
              arg1: CONST Int type=kotlin.Int value='42'
            then: CONST String type=kotlin.String value='OK'
            else: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail: '
              GET_VAR 'x: Int' type=kotlin.Int operator=null
