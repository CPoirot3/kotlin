MODULE <test-module>
  FILE /traitImplGenericDelegation.kt
    CLASS INTERFACE A
      FUN public open fun foo(t: T, u: U): V?
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='foo(T, U): V?'
            CONST Null type=kotlin.Nothing? value='null'
    CLASS INTERFACE B
    CLASS CLASS C
      CONSTRUCTOR public constructor C()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='C'
      FUN public open override fun foo(t: kotlin.String, u: kotlin.Int): java.lang.Runnable?
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='foo(String, Int): Runnable?'
            CALL 'foo(String, Int): Runnable?' superQualifier=B type=java.lang.Runnable? operator=null
              $this: THIS of 'C' type=B<kotlin.String, java.lang.Runnable>
              t: GET_VAR 'value-parameter t: String' type=kotlin.String operator=null
              u: GET_VAR 'value-parameter u: Int' type=kotlin.Int operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val x: java.lang.Runnable?
          CALL 'foo(String, Int): Runnable?' type=java.lang.Runnable? operator=null
            $this: CALL 'constructor C()' type=C operator=null
            t: CONST String type=kotlin.String value=''
            u: CONST Int type=kotlin.Int value='0'
        RETURN type=kotlin.Nothing from='box(): String'
          WHEN type=kotlin.String operator=IF
            if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR 'x: Runnable?' type=java.lang.Runnable? operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CONST String type=kotlin.String value='OK'
            else: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail: '
              GET_VAR 'x: Runnable?' type=java.lang.Runnable? operator=null
