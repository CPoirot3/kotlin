MODULE <test-module>
  FILE /kotlin.kt
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val nullStr: kotlin.String!
          CALL 'nullString(): String!' type=kotlin.String! operator=null
        VAR val nonnullStr: kotlin.String!
          CALL 'nonnullString(): String!' type=kotlin.String! operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'foo() on String!: String!' type=kotlin.String! operator=null
                $receiver: GET_VAR 'nullStr: String!' type=kotlin.String! operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='fail 1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'foo() on String!: String!' type=kotlin.String! operator=null
                $receiver: GET_VAR 'nonnullStr: String!' type=kotlin.String! operator=null
              arg1: GET_VAR 'nonnullStr: String!' type=kotlin.String! operator=null
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='fail 2'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'fooN() on String!: String?' type=kotlin.String? operator=null
                $receiver: GET_VAR 'nullStr: String!' type=kotlin.String! operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='fail 3'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'fooN() on String!: String?' type=kotlin.String? operator=null
                $receiver: GET_VAR 'nonnullStr: String!' type=kotlin.String! operator=null
              arg1: GET_VAR 'nonnullStr: String!' type=kotlin.String! operator=null
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='fail 4'
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
    FUN public inline fun <reified T> T.foo(): T
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo() on T: T'
          TYPE_OP operator=CAST typeOperand=T
            $RECEIVER of 'foo() on T: T' type=T
    FUN public inline fun <reified T> T.fooN(): T?
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='fooN() on T: T?'
          TYPE_OP operator=CAST typeOperand=T?
            $RECEIVER of 'fooN() on T: T?' type=T
