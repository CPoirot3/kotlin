MODULE <test-module>
  FILE /defaultJavaClass.kt
    FUN public inline fun <reified T : kotlin.Any> foo(x: java.lang.Class<T> = ...): kotlin.String
      x: EXPRESSION_BODY
        CALL '<get-java>() on KClass<T>: Class<T>' type=java.lang.Class<T> operator=GET_PROPERTY
          $receiver: CLASS_REFERENCE '<reified T : Any>' type=kotlin.reflect.KClass<T>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo(Class<T> = ...): String'
          TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=kotlin.String
            CALL 'getName(): String!' type=kotlin.String! operator=null
              $this: GET_VAR 'value-parameter x: Class<T> = ...' type=java.lang.Class<T> operator=null
    FUN public inline fun <reified R : kotlin.Any> bar(x: R): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='bar(R): String'
          CALL 'foo(Class<R> = ...): String' type=kotlin.String operator=null
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        CALL 'assertEquals(String, String, String? = ...): Unit' type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='java.lang.String'
          actual: CALL 'foo(Class<String> = ...): String' type=kotlin.String operator=null
        CALL 'assertEquals(String, String, String? = ...): Unit' type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='java.lang.Integer'
          actual: CALL 'foo(Class<Int> = ...): String' type=kotlin.String operator=null
        CALL 'assertEquals(String, String, String? = ...): Unit' type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='java.lang.Object'
          actual: CALL 'foo(Class<Any> = ...): String' type=kotlin.String operator=null
        CALL 'assertEquals(String, String, String? = ...): Unit' type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='java.lang.String'
          actual: CALL 'bar(String): String' type=kotlin.String operator=null
            x: CONST String type=kotlin.String value='abc'
        CALL 'assertEquals(String, String, String? = ...): Unit' type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='java.lang.Integer'
          actual: CALL 'bar(Int): String' type=kotlin.String operator=null
            x: CONST Int type=kotlin.Int value='1'
        CALL 'assertEquals(String, String, String? = ...): Unit' type=kotlin.Unit operator=null
          expected: CONST String type=kotlin.String value='java.lang.Object'
          actual: CALL 'bar(Any): String' type=kotlin.String operator=null
            x: CALL 'constructor Any()' type=kotlin.Any operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
