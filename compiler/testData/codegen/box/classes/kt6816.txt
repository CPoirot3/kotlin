MODULE <test-module>
  FILE /kt6816.kt
    CLASS CLASS CalculatorConstants
      CONSTRUCTOR public constructor CalculatorConstants(id: kotlin.Long = ..., detour: kotlin.Double = ..., taxi: kotlin.Double = ..., loop: kotlin.Double = ..., planeCondition: kotlin.Double = ..., co2PerKerosene: kotlin.Double = ..., freight: kotlin.Double = ..., rfi: kotlin.Double = ..., rfiAltitude: kotlin.Double = ..., averageContribution: kotlin.Double = ..., singleContribution: kotlin.Double = ..., returnContribution: kotlin.Double = ..., defraFactor: kotlin.Double = ..., airCondMult: kotlin.Double = ..., autoTransMult: kotlin.Double = ..., hybridDefault: kotlin.String? = ..., travelClassOne: kotlin.Double = ..., status: kotlin.String = ...)
        id: EXPRESSION_BODY
          CONST Long type=kotlin.Long value='0'
        detour: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        taxi: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        loop: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        planeCondition: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        co2PerKerosene: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        freight: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        rfi: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        rfiAltitude: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        averageContribution: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        singleContribution: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        returnContribution: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        defraFactor: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        airCondMult: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        autoTransMult: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        hybridDefault: EXPRESSION_BODY
          CONST Null type=kotlin.Nothing? value='null'
        travelClassOne: EXPRESSION_BODY
          CONST Double type=kotlin.Double value='0.0'
        status: EXPRESSION_BODY
          CONST String type=kotlin.String value='OK'
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          SET_BACKING_FIELD 'id: Long' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter id: Long = ...' type=kotlin.Long operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'detour: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter detour: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'taxi: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter taxi: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'loop: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter loop: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'planeCondition: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter planeCondition: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'co2PerKerosene: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter co2PerKerosene: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'freight: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter freight: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'rfi: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter rfi: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'rfiAltitude: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter rfiAltitude: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'averageContribution: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter averageContribution: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'singleContribution: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter singleContribution: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'returnContribution: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter returnContribution: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'defraFactor: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter defraFactor: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'airCondMult: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter airCondMult: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'autoTransMult: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter autoTransMult: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'hybridDefault: String?' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter hybridDefault: String? = ...' type=kotlin.String? operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'travelClassOne: Double' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter travelClassOne: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'status: String' type=kotlin.Unit operator=null
            receiver: THIS of 'CalculatorConstants' type=CalculatorConstants
            value: GET_VAR 'value-parameter status: String = ...' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor='CalculatorConstants'
      PROPERTY public final val id: kotlin.Long
        EXPRESSION_BODY
          GET_VAR 'value-parameter id: Long = ...' type=kotlin.Long operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val detour: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter detour: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val taxi: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter taxi: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val loop: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter loop: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val planeCondition: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter planeCondition: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val co2PerKerosene: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter co2PerKerosene: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val freight: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter freight: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val rfi: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter rfi: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val rfiAltitude: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter rfiAltitude: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val averageContribution: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter averageContribution: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val singleContribution: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter singleContribution: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val returnContribution: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter returnContribution: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val defraFactor: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter defraFactor: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val airCondMult: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter airCondMult: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val autoTransMult: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter autoTransMult: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val hybridDefault: kotlin.String?
        EXPRESSION_BODY
          GET_VAR 'value-parameter hybridDefault: String? = ...' type=kotlin.String? operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val travelClassOne: kotlin.Double
        EXPRESSION_BODY
          GET_VAR 'value-parameter travelClassOne: Double = ...' type=kotlin.Double operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val status: kotlin.String
        EXPRESSION_BODY
          GET_VAR 'value-parameter status: String = ...' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val c: CalculatorConstants
          CALL 'constructor CalculatorConstants(Long = ..., Double = ..., Double = ..., Double = ..., Double = ..., Double = ..., Double = ..., Double = ..., Double = ..., Double = ..., Double = ..., Double = ..., Double = ..., Double = ..., Double = ..., String? = ..., Double = ..., String = ...)' type=CalculatorConstants operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CALL '<get-status>(): String' type=kotlin.String operator=GET_PROPERTY
            $this: GET_VAR 'c: CalculatorConstants' type=CalculatorConstants operator=null
