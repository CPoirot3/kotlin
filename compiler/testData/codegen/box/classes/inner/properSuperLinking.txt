MODULE <test-module>
  FILE /properSuperLinking.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(s: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          SET_BACKING_FIELD 's: String' type=kotlin.Unit operator=null
            receiver: THIS of 'A' type=A
            value: GET_VAR 'value-parameter s: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor='A'
      PROPERTY public final val s: kotlin.String
        EXPRESSION_BODY
          GET_VAR 'value-parameter s: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val z: kotlin.String
        EXPRESSION_BODY
          CALL '<get-s>(): String' type=kotlin.String operator=GET_PROPERTY
            $this: THIS of 'A' type=A
      FUN public final fun test(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='test(): String'
            CALL '<get-s>(): String' type=kotlin.String operator=GET_PROPERTY
              $this: THIS of 'A' type=A
      CLASS CLASS B
        CONSTRUCTOR public constructor B(s: kotlin.String)
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'constructor A(String)'
              s: GET_VAR 'value-parameter s: String' type=kotlin.String operator=null
            INSTANCE_INITIALIZER_CALL classDescriptor='B'
        FUN public final fun testB(): kotlin.String
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='testB(): String'
              CALL 'plus(Any?): String' type=kotlin.String operator=PLUS
                $this: CALL '<get-z>(): String' type=kotlin.String operator=GET_PROPERTY
                  $this: THIS of 'B' type=A.B
                other: CALL 'test(): String' type=kotlin.String operator=null
                  $this: THIS of 'B' type=A.B
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val res: kotlin.String
          CALL 'testB(): String' type=kotlin.String operator=null
            $this: CALL 'constructor B(String)' type=A.B operator=null
              $this: CALL 'constructor A(String)' type=A operator=null
                s: CONST String type=kotlin.String value='Fail'
              s: CONST String type=kotlin.String value='OK'
        RETURN type=kotlin.Nothing from='box(): String'
          WHEN type=kotlin.String operator=IF
            if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR 'res: String' type=kotlin.String operator=null
              arg1: CONST String type=kotlin.String value='OKOK'
            then: CONST String type=kotlin.String value='OK'
            else: GET_VAR 'res: String' type=kotlin.String operator=null
