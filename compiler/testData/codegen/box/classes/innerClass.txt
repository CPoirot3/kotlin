MODULE <test-module>
  FILE /innerClass.kt
    CLASS CLASS Outer
      CONSTRUCTOR public constructor Outer(foo: java.lang.StringBuilder)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          SET_BACKING_FIELD 'foo: StringBuilder' type=kotlin.Unit operator=null
            receiver: THIS of 'Outer' type=Outer
            value: GET_VAR 'value-parameter foo: StringBuilder' type=java.lang.StringBuilder operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor='Outer'
      PROPERTY public final val foo: java.lang.StringBuilder
        EXPRESSION_BODY
          GET_VAR 'value-parameter foo: StringBuilder' type=java.lang.StringBuilder operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      CLASS CLASS Inner
        CONSTRUCTOR public constructor Inner()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
            INSTANCE_INITIALIZER_CALL classDescriptor='Inner'
        FUN public final fun len(): kotlin.Int
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='len(): Int'
              CALL '<get-length>(): Int' type=kotlin.Int operator=GET_PROPERTY
                $this: CALL '<get-foo>(): StringBuilder' type=java.lang.StringBuilder operator=GET_PROPERTY
                  $this: THIS of 'Outer' type=Outer
      FUN public final fun test(): Outer.Inner
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='test(): Outer.Inner'
            CALL 'constructor Inner()' type=Outer.Inner operator=null
              $this: THIS of 'Outer' type=Outer
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val sb: java.lang.StringBuilder
          CALL 'constructor StringBuilder(String!)' type=java.lang.StringBuilder operator=null
            p0: CONST String type=kotlin.String value='xyzzy'
        VAR val o: Outer
          CALL 'constructor Outer(StringBuilder)' type=Outer operator=null
            foo: GET_VAR 'sb: StringBuilder' type=java.lang.StringBuilder operator=null
        VAR val i: Outer.Inner
          CALL 'test(): Outer.Inner' type=Outer.Inner operator=null
            $this: GET_VAR 'o: Outer' type=Outer operator=null
        VAR val l: kotlin.Int
          CALL 'len(): Int' type=kotlin.Int operator=null
            $this: GET_VAR 'i: Outer.Inner' type=Outer.Inner operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          WHEN type=kotlin.String operator=IF
            if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
                arg0: GET_VAR 'l: Int' type=kotlin.Int operator=null
                arg1: CONST Int type=kotlin.Int value='5'
            then: CONST String type=kotlin.String value='fail'
            else: CONST String type=kotlin.String value='OK'
