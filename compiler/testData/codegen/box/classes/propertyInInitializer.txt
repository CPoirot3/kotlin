MODULE <test-module>
  FILE /propertyInInitializer.kt
    CLASS CLASS Outer
      CONSTRUCTOR public constructor Outer()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='Outer'
      PROPERTY public final val s: kotlin.String = "xyzzy"
        EXPRESSION_BODY
          CONST String type=kotlin.String value='xyzzy'
      CLASS CLASS InnerBase
        CONSTRUCTOR public constructor InnerBase(name: kotlin.String)
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
            SET_BACKING_FIELD 'name: String' type=kotlin.Unit operator=null
              receiver: THIS of 'InnerBase' type=Outer.InnerBase
              value: GET_VAR 'value-parameter name: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
            INSTANCE_INITIALIZER_CALL classDescriptor='InnerBase'
        PROPERTY public final val name: kotlin.String
          EXPRESSION_BODY
            GET_VAR 'value-parameter name: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      CLASS CLASS InnerDerived
        CONSTRUCTOR public constructor InnerDerived()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'constructor InnerBase(String)'
              $this: THIS of 'Outer' type=Outer
              name: CALL '<get-s>(): String' type=kotlin.String operator=GET_PROPERTY
                $this: THIS of 'Outer' type=Outer
            INSTANCE_INITIALIZER_CALL classDescriptor='InnerDerived'
      PROPERTY public final val x: Outer.InnerDerived
        EXPRESSION_BODY
          CALL 'constructor InnerDerived()' type=Outer.InnerDerived operator=null
            $this: THIS of 'Outer' type=Outer
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val o: Outer
          CALL 'constructor Outer()' type=Outer operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          WHEN type=kotlin.String operator=IF
            if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
                arg0: CALL '<get-name>(): String' type=kotlin.String operator=GET_PROPERTY
                  $this: CALL '<get-x>(): Outer.InnerDerived' type=Outer.InnerDerived operator=GET_PROPERTY
                    $this: GET_VAR 'o: Outer' type=Outer operator=null
                arg1: CONST String type=kotlin.String value='xyzzy'
            then: CONST String type=kotlin.String value='fail'
            else: CONST String type=kotlin.String value='OK'
