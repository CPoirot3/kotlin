MODULE <test-module>
  FILE /kt707.kt
    CLASS CLASS List
      CONSTRUCTOR public constructor List<T>(head: T, tail: List<T>? = ...)
        tail: EXPRESSION_BODY
          CONST Null type=kotlin.Nothing? value='null'
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          SET_BACKING_FIELD 'head: T' type=kotlin.Unit operator=null
            receiver: THIS of 'List' type=List<T>
            value: GET_VAR 'value-parameter head: T' type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          SET_BACKING_FIELD 'tail: List<T>?' type=kotlin.Unit operator=null
            receiver: THIS of 'List' type=List<T>
            value: GET_VAR 'value-parameter tail: List<T>? = ...' type=List<T>? operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor='List'
      PROPERTY public final val head: T
        EXPRESSION_BODY
          GET_VAR 'value-parameter head: T' type=T operator=INITIALIZE_PROPERTY_FROM_PARAMETER
      PROPERTY public final val tail: List<T>?
        EXPRESSION_BODY
          GET_VAR 'value-parameter tail: List<T>? = ...' type=List<T>? operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    FUN public fun <T> List<T>.mapHead(f: (T) -> T): List<T>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='mapHead((T) -> T) on List<T>: List<T>'
          CALL 'constructor List(T, List<T>? = ...)' type=List<T> operator=null
            head: CALL 'invoke(T): T' type=T operator=INVOKE
              $this: GET_VAR 'value-parameter f: (T) -> T' type=(T) -> T operator=VARIABLE_AS_FUNCTION
              p1: CALL '<get-head>(): T' type=T operator=GET_PROPERTY
                $this: $RECEIVER of 'mapHead((T) -> T) on List<T>: List<T>' type=List<T>
            tail: CONST Null type=kotlin.Nothing? value='null'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val a: kotlin.Int
          CALL '<get-head>(): Int' type=kotlin.Int operator=GET_PROPERTY
            $this: CALL 'mapHead((Int) -> Int) on List<Int>: List<Int>' type=List<kotlin.Int> operator=null
              $receiver: CALL 'constructor List(Int, List<Int>? = ...)' type=List<kotlin.Int> operator=null
                head: CONST Int type=kotlin.Int value='1'
              f: BLOCK type=(kotlin.Int) -> kotlin.Int operator=LAMBDA
                FUN local final fun <anonymous>(it: kotlin.Int): kotlin.Int
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from='<anonymous>(Int): Int'
                      CALL 'times(Int): Int' type=kotlin.Int operator=MUL
                        $this: GET_VAR 'value-parameter it: Int' type=kotlin.Int operator=null
                        other: CONST Int type=kotlin.Int value='2'
                CALLABLE_REFERENCE '<anonymous>(Int): Int' type=(kotlin.Int) -> kotlin.Int operator=LAMBDA
        BLOCK type=kotlin.Unit? operator=SAFE_CALL
          VAR val tmp0_safe_receiver: java.io.PrintStream!
            GET_BACKING_FIELD 'out: PrintStream!' type=java.io.PrintStream! operator=GET_PROPERTY
          WHEN type=kotlin.Unit? operator=SAFE_CALL
            if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
              arg0: GET_VAR 'tmp0_safe_receiver: PrintStream!' type=java.io.PrintStream! operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
            then: CONST Null type=kotlin.Nothing? value='null'
            else: CALL 'println(Int): Unit' type=kotlin.Unit operator=null
              $this: TYPE_OP operator=IMPLICIT_NOTNULL typeOperand=java.io.PrintStream
                GET_VAR 'tmp0_safe_receiver: PrintStream!' type=java.io.PrintStream! operator=null
              p0: GET_VAR 'a: Int' type=kotlin.Int operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
