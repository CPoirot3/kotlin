MODULE <test-module>
  FILE /K.kt
    CLASS CLASS K
      CONSTRUCTOR public constructor K()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='K'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val f: kotlin.reflect.KProperty1<J, kotlin.Int>
          CALLABLE_REFERENCE 'value: Int' type=kotlin.reflect.KProperty1<J, kotlin.Int> operator=null
        VAR val a: J
          CALL 'constructor J()' type=J operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          WHEN type=kotlin.String operator=IF
            if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
              arg0: CALL 'get(J): Int' type=kotlin.Int operator=null
                $this: GET_VAR 'f: KProperty1<J, Int>' type=kotlin.reflect.KProperty1<J, kotlin.Int> operator=null
                receiver: GET_VAR 'a: J' type=J operator=null
              arg1: CONST Int type=kotlin.Int value='42'
            then: CONST String type=kotlin.String value='OK'
            else: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='Fail: '
              CALL 'get(J): Int' type=kotlin.Int operator=null
                $this: GET_VAR 'f: KProperty1<J, Int>' type=kotlin.reflect.KProperty1<J, kotlin.Int> operator=null
                receiver: GET_VAR 'a: J' type=J operator=null
