MODULE <test-module>
  FILE /isMarkedNullable.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='A'
      FUN public final fun <T, U : kotlin.Any> foo(p1: kotlin.String, p2: kotlin.String?, p3: T, p4: U, p5: U?): kotlin.Unit
        BLOCK_BODY
    FUN public fun kotlin.Any?.ext(): kotlin.Unit
      BLOCK_BODY
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val ps: kotlin.collections.List<kotlin.Boolean>
          CALL 'map((KParameter) -> Boolean) on Iterable<KParameter>: List<Boolean>' type=kotlin.collections.List<kotlin.Boolean> operator=null
            $receiver: CALL '<get-parameters>(): List<KParameter>' type=kotlin.collections.List<kotlin.reflect.KParameter> operator=GET_PROPERTY
              $this: CALL 'single() on Iterable<KFunction<*>>: KFunction<*>' type=kotlin.reflect.KFunction<*> operator=null
                $receiver: CALL '<get-declaredFunctions>() on KClass<*>: Collection<KFunction<*>>' type=kotlin.collections.Collection<kotlin.reflect.KFunction<*>> operator=GET_PROPERTY
                  $receiver: CLASS_REFERENCE 'A' type=kotlin.reflect.KClass<A>
            transform: BLOCK type=(kotlin.reflect.KParameter) -> kotlin.Boolean operator=LAMBDA
              FUN local final fun <anonymous>(it: kotlin.reflect.KParameter): kotlin.Boolean
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='<anonymous>(KParameter): Boolean'
                    CALL '<get-isMarkedNullable>(): Boolean' type=kotlin.Boolean operator=GET_PROPERTY
                      $this: CALL '<get-type>(): KType' type=kotlin.reflect.KType operator=GET_PROPERTY
                        $this: GET_VAR 'value-parameter it: KParameter' type=kotlin.reflect.KParameter operator=null
              CALLABLE_REFERENCE '<anonymous>(KParameter): Boolean' type=(kotlin.reflect.KParameter) -> kotlin.Boolean operator=LAMBDA
        CALL 'assertEquals(List<Boolean>, List<Boolean>, String? = ...): Unit' type=kotlin.Unit operator=null
          expected: CALL 'listOf(vararg Boolean): List<Boolean>' type=kotlin.collections.List<kotlin.Boolean> operator=null
            elements: VARARG type=Array<out Boolean> varargElementType=Boolean
              CONST Boolean type=kotlin.Boolean value='false'
              CONST Boolean type=kotlin.Boolean value='false'
              CONST Boolean type=kotlin.Boolean value='true'
              CONST Boolean type=kotlin.Boolean value='false'
              CONST Boolean type=kotlin.Boolean value='false'
              CONST Boolean type=kotlin.Boolean value='true'
          actual: GET_VAR 'ps: List<Boolean>' type=kotlin.collections.List<kotlin.Boolean> operator=null
        CALL 'assertTrue(Boolean, String? = ...): Unit' type=kotlin.Unit operator=null
          actual: CALL '<get-isMarkedNullable>(): Boolean' type=kotlin.Boolean operator=GET_PROPERTY
            $this: CALL '<get-type>(): KType' type=kotlin.reflect.KType operator=GET_PROPERTY
              $this: CALL 'single() on List<KParameter>: KParameter' type=kotlin.reflect.KParameter operator=null
                $receiver: CALL '<get-parameters>(): List<KParameter>' type=kotlin.collections.List<kotlin.reflect.KParameter> operator=GET_PROPERTY
                  $this: CALLABLE_REFERENCE 'ext() on Any?: Unit' type=kotlin.reflect.KFunction1<kotlin.Any?, kotlin.Unit> operator=null
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
