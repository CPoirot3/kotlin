MODULE <test-module>
  FILE /arrayList.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor ArrayList()'
          INSTANCE_INITIALIZER_CALL classDescriptor='A'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val a: A
          CALL 'constructor A()' type=A operator=null
        VAR val b: A
          CALL 'constructor A()' type=A operator=null
        CALL 'addAll(Collection<String>): Boolean' type=kotlin.Boolean operator=null
          $this: GET_VAR 'a: A' type=A operator=null
          elements: GET_VAR 'b: A' type=A operator=null
        CALL 'addAll(Int, Collection<String>): Boolean' type=kotlin.Boolean operator=null
          $this: GET_VAR 'a: A' type=A operator=null
          index: CONST Int type=kotlin.Int value='0'
          elements: GET_VAR 'b: A' type=A operator=null
        CALL 'removeAll(Collection<String>): Boolean' type=kotlin.Boolean operator=null
          $this: GET_VAR 'a: A' type=A operator=null
          elements: GET_VAR 'b: A' type=A operator=null
        CALL 'retainAll(Collection<String>): Boolean' type=kotlin.Boolean operator=null
          $this: GET_VAR 'a: A' type=A operator=null
          elements: GET_VAR 'b: A' type=A operator=null
        CALL 'clear(): Unit' type=kotlin.Unit operator=null
          $this: GET_VAR 'a: A' type=A operator=null
        CALL 'add(String): Boolean' type=kotlin.Boolean operator=null
          $this: GET_VAR 'a: A' type=A operator=null
          element: CONST String type=kotlin.String value=''
        CALL 'set(Int, String): String' type=kotlin.String operator=null
          $this: GET_VAR 'a: A' type=A operator=null
          index: CONST Int type=kotlin.Int value='0'
          element: CONST String type=kotlin.String value=''
        CALL 'add(Int, String): Unit' type=kotlin.Unit operator=null
          $this: GET_VAR 'a: A' type=A operator=null
          index: CONST Int type=kotlin.Int value='0'
          element: CONST String type=kotlin.String value=''
        CALL 'removeAt(Int): String' type=kotlin.String operator=null
          $this: GET_VAR 'a: A' type=A operator=null
          p0: CONST Int type=kotlin.Int value='0'
        CALL 'remove(String): Boolean' type=kotlin.Boolean operator=null
          $this: GET_VAR 'a: A' type=A operator=null
          element: CONST String type=kotlin.String value=''
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
