MODULE <test-module>
  FILE /A.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='A'
      FUN protected open fun test(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='test(): String'
            CONST String type=kotlin.String value='FAIL (A)'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='box(): String'
          CALL 'invoke(): String' type=kotlin.String operator=INVOKE
            $this: CALL '<get-value>(): () -> String' type=() -> kotlin.String operator=GET_PROPERTY
              $this: CALL 'constructor C()' type=second.C operator=null
  FILE /B.kt
    CLASS CLASS B
      CONSTRUCTOR public constructor B()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor A()'
          INSTANCE_INITIALIZER_CALL classDescriptor='B'
      PROPERTY public final val value: () -> kotlin.String
        EXPRESSION_BODY
          BLOCK type=() -> kotlin.String operator=LAMBDA
            FUN local final fun <anonymous>(): kotlin.String
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='<anonymous>(): String'
                  CALL 'test(): String' type=kotlin.String operator=null
                    $this: THIS of 'B' type=second.B
            CALLABLE_REFERENCE '<anonymous>(): String' type=() -> kotlin.String operator=LAMBDA
    CLASS CLASS C
      CONSTRUCTOR public constructor C()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor B()'
          INSTANCE_INITIALIZER_CALL classDescriptor='C'
      FUN protected open override fun test(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='test(): String'
            CONST String type=kotlin.String value='OK'
