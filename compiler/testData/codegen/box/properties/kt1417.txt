MODULE <test-module>
  FILE /kt1417.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A(value: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          SET_BACKING_FIELD 'value: String' type=kotlin.Unit operator=null
            receiver: THIS of 'A' type=pack.A
            value: GET_VAR 'value-parameter value: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
          INSTANCE_INITIALIZER_CALL classDescriptor='A'
      PROPERTY public final val value: kotlin.String
        EXPRESSION_BODY
          GET_VAR 'value-parameter value: String' type=kotlin.String operator=INITIALIZE_PROPERTY_FROM_PARAMETER
    CLASS CLASS B
      CONSTRUCTOR public constructor B(value: kotlin.String)
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor A(String)'
            value: GET_VAR 'value-parameter value: String' type=kotlin.String operator=null
          INSTANCE_INITIALIZER_CALL classDescriptor='B'
      FUN public open override fun toString(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='toString(): String'
            STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value='B('
              CALL '<get-value>(): String' type=kotlin.String operator=GET_PROPERTY
                $this: THIS of 'B' type=pack.B
              CONST String type=kotlin.String value=')'
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='box(): String'
          WHEN type=kotlin.String operator=IF
            if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EQEQ
              arg0: CALL 'toString(): String' type=kotlin.String operator=null
                $this: CALL 'constructor B(String)' type=pack.B operator=null
                  value: CONST String type=kotlin.String value='4'
              arg1: CONST String type=kotlin.String value='B(4)'
            then: CONST String type=kotlin.String value='OK'
            else: CONST String type=kotlin.String value='fail'
