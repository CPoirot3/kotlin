MODULE <test-module>
  FILE /test.kt
    CLASS CLASS A
      CONSTRUCTOR public constructor A()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Test()'
          INSTANCE_INITIALIZER_CALL classDescriptor='A'
      FUN public final fun foo(): kotlin.String?
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='foo(): String?'
            GET_BACKING_FIELD 'value: String!' type=kotlin.String! operator=GET_PROPERTY
              receiver: THIS of 'A' type=A
      FUN public final fun bar(): kotlin.String?
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='bar(): String?'
            GET_BACKING_FIELD 'value: String!' type=kotlin.String! operator=GET_PROPERTY
              receiver: THIS of 'A' type=A
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'foo(): String?' type=kotlin.String? operator=null
                $this: CALL 'constructor A()' type=A operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='Fail 1'
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'bar(): String?' type=kotlin.String? operator=null
                $this: CALL 'constructor A()' type=A operator=null
              arg1: CONST Null type=kotlin.Nothing? value='null'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='Fail 2'
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
