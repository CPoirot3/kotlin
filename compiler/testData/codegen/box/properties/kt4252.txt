MODULE <test-module>
  FILE /kt4252.kt
    CLASS CLASS CallbackBlock
      CONSTRUCTOR public constructor CallbackBlock()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='CallbackBlock'
    CLASS CLASS Foo
      CONSTRUCTOR public constructor Foo()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='Foo'
      CLASS OBJECT companion object of Foo
        CONSTRUCTOR private constructor Companion()
          BLOCK_BODY
            DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
            INSTANCE_INITIALIZER_CALL classDescriptor='companion object of Foo'
        PROPERTY private final var bar: kotlin.Int
          EXPRESSION_BODY
            CONST Int type=kotlin.Int value='0'
      ANONYMOUS_INITIALIZER Foo
        BLOCK_BODY
          BLOCK type=kotlin.Int operator=PREFIX_INCR
            VAR val tmp0_this: Foo.Companion
              THIS of 'companion object of Foo' type=Foo.Companion
            BLOCK type=kotlin.Int operator=PREFIX_INCR
              VAR val tmp1: kotlin.Int
                CALL 'inc(): Int' type=kotlin.Int operator=PREFIX_INCR
                  $this: CALL '<get-bar>(): Int' type=kotlin.Int operator=PREFIX_INCR
                    $this: GET_VAR 'tmp0_this: Foo.Companion' type=Foo.Companion operator=null
              CALL '<set-bar>(Int): Unit' type=kotlin.Unit operator=PREFIX_INCR
                $this: GET_VAR 'tmp0_this: Foo.Companion' type=Foo.Companion operator=null
                <set-?>: GET_VAR 'tmp1: Int' type=kotlin.Int operator=null
              GET_VAR 'tmp1: Int' type=kotlin.Int operator=null
      FUN public final fun getBar(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='getBar(): Int'
            CALL '<get-bar>(): Int' type=kotlin.Int operator=GET_PROPERTY
              $this: THIS of 'companion object of Foo' type=Foo.Companion
    FUN public fun box(): kotlin.String
      BLOCK_BODY
        VAR val foo: Foo
          CALL 'constructor Foo()' type=Foo operator=null
        WHEN type=kotlin.Unit operator=IF
          if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean operator=EXCLEQ
            arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean operator=EXCLEQ
              arg0: CALL 'getBar(): Int' type=kotlin.Int operator=null
                $this: GET_VAR 'foo: Foo' type=Foo operator=null
              arg1: CONST Int type=kotlin.Int value='1'
          then: RETURN type=kotlin.Nothing from='box(): String'
            CONST String type=kotlin.String value='Fail'
        RETURN type=kotlin.Nothing from='box(): String'
          CONST String type=kotlin.String value='OK'
